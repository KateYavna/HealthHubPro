{"ast":null,"code":"import { Person } from '../models/Person.model';\nimport { Address } from '../models/Address.model';\nimport { EmergencyContact } from '../models/EmergencyContact.model';\nimport { AppointmentPostModel } from '../models/AppointmentPostModel.model';\nimport { PrescriptionPostModel } from '../models/PrescriptionPostModel.model';\nimport { Patient } from '../models/Patient.model';\nimport { PrescriptionHistory } from '../models/PrescriptionHistory.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/profile-form.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction PatientUpdateComponent_label_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\");\n    i0.ɵɵelement(1, \"input\", 83);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const allergy_r30 = ctx.$implicit;\n    const i_r31 = ctx.index;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r14.getCommonAllergiesControl(i_r31));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", allergy_r30.name, \" \");\n  }\n}\nfunction PatientUpdateComponent_option_94_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 84);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const provider_r32 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", provider_r32.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", provider_r32.person.firstName, \" \", provider_r32.person.lastName, \" \");\n  }\n}\nfunction PatientUpdateComponent_table_104_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 86);\n    i0.ɵɵlistener(\"click\", function PatientUpdateComponent_table_104_tr_14_Template_td_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r36);\n      const appointment_r34 = restoredCtx.$implicit;\n      const ctx_r35 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r35.populateAppointmentForm(appointment_r34));\n    });\n    i0.ɵɵtext(2, \"update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 87);\n    i0.ɵɵlistener(\"click\", function PatientUpdateComponent_table_104_tr_14_Template_td_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r36);\n      const appointment_r34 = restoredCtx.$implicit;\n      const ctx_r37 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r37.deleteAppointment(appointment_r34.id));\n    });\n    i0.ɵɵtext(12, \"delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const appointment_r34 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(appointment_r34.startTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r34.endTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", appointment_r34.healthcareProvider.person.firstName, \" \", appointment_r34.healthcareProvider.person.lastName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r34.appointmentType);\n  }\n}\nfunction PatientUpdateComponent_table_104_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 85)(1, \"thead\")(2, \"tr\");\n    i0.ɵɵelement(3, \"th\");\n    i0.ɵɵelementStart(4, \"th\");\n    i0.ɵɵtext(5, \"Start time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"End time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"HealthcareProvider\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"th\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, PatientUpdateComponent_table_104_tr_14_Template, 13, 5, \"tr\", 46);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r20.appointments);\n  }\n}\nfunction PatientUpdateComponent_option_125_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 84);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const provider_r38 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", provider_r38.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", provider_r38.person.firstName, \" \", provider_r38.person.lastName, \" \");\n  }\n}\nfunction PatientUpdateComponent_table_153_tr_14_table_13_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 86);\n    i0.ɵɵlistener(\"click\", function PatientUpdateComponent_table_153_tr_14_table_13_tr_10_Template_td_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r45);\n      const history_r43 = restoredCtx.$implicit;\n      const ctx_r44 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r44.populatePrescriptionHistoryForm(history_r43));\n    });\n    i0.ɵɵtext(2, \"update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 87);\n    i0.ɵɵlistener(\"click\", function PatientUpdateComponent_table_153_tr_14_table_13_tr_10_Template_td_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r45);\n      const history_r43 = restoredCtx.$implicit;\n      const ctx_r46 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r46.deletePrescriptionHistory(history_r43.id));\n    });\n    i0.ɵɵtext(8, \"delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const history_r43 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(history_r43.dispenseDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(history_r43.quantityDispensed);\n  }\n}\nfunction PatientUpdateComponent_table_153_tr_14_table_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"tr\");\n    i0.ɵɵelement(3, \"th\");\n    i0.ɵɵelementStart(4, \"th\");\n    i0.ɵɵtext(5, \"Dispense date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Quantity dispensed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"th\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, PatientUpdateComponent_table_153_tr_14_table_13_tr_10_Template, 9, 2, \"tr\", 46);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const prescription_r40 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", prescription_r40.prescriptionHistory);\n  }\n}\nfunction PatientUpdateComponent_table_153_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r49 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 86);\n    i0.ɵɵlistener(\"click\", function PatientUpdateComponent_table_153_tr_14_Template_td_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r49);\n      const prescription_r40 = restoredCtx.$implicit;\n      const ctx_r48 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r48.populatePrescriptionForm(prescription_r40));\n    });\n    i0.ɵɵtext(2, \"update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 87);\n    i0.ɵɵlistener(\"click\", function PatientUpdateComponent_table_153_tr_14_Template_td_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r49);\n      const prescription_r40 = restoredCtx.$implicit;\n      const ctx_r50 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r50.deletePrescription(prescription_r40.id));\n    });\n    i0.ɵɵtext(12, \"delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, PatientUpdateComponent_table_153_tr_14_table_13_Template, 11, 1, \"table\", 88);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const prescription_r40 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(prescription_r40.issueDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", prescription_r40.healthcareProvider.person.firstName, \" \", prescription_r40.healthcareProvider.person.lastName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(prescription_r40.medication);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(prescription_r40.dosage);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", prescription_r40.prescriptionHistory.length);\n  }\n}\nfunction PatientUpdateComponent_table_153_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 85)(1, \"thead\")(2, \"tr\");\n    i0.ɵɵelement(3, \"th\");\n    i0.ɵɵelementStart(4, \"th\");\n    i0.ɵɵtext(5, \"Issue date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Healthcare Provider\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Medication\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Dosage\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"th\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, PatientUpdateComponent_table_153_tr_14_Template, 14, 6, \"tr\", 46);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r29.prescriptions);\n  }\n}\nexport class PatientUpdateComponent {\n  constructor(route, patientService, formBuilder) {\n    this.route = route;\n    this.patientService = patientService;\n    this.formBuilder = formBuilder;\n    this.personId = \"\";\n    this.person = new Person();\n    this.address = new Address();\n    this.emergencyContact = new EmergencyContact();\n    this.patient = new Patient();\n    this.commonAllergies = [];\n    this.healthcareProviders = [];\n    this.appointments = [];\n    this.prescriptions = [];\n    this.prescriptionHistories = [];\n    this.appointment = new AppointmentPostModel();\n    this.prescription = new PrescriptionPostModel();\n    this.prescriptionHistory = new PrescriptionHistory();\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.personId = params['id'];\n      this.loadData();\n    });\n  }\n  loadData() {\n    this.patientService.getPatientData(this.personId).subscribe(data => {\n      this.person = data.person;\n      this.address = data.address;\n      this.emergencyContact = data.emergencyContact;\n      this.patient = data.patient;\n      this.commonAllergies = data.commonAllergies;\n      this.healthcareProviders = data.healthcareProviders;\n      this.appointments = data.appointments;\n      this.prescriptions = data.prescriptions;\n      this.buildForm();\n      this.appointment.patientId = this.patient.id;\n      this.prescription.patientId = this.patient.id;\n    });\n  }\n  buildForm() {\n    this.patientAllergiesForm = this.formBuilder.group({\n      commonAllergies: this.buildAllergyCheckboxes()\n    });\n    this.setInitialCheckboxValues();\n  }\n  buildAllergyCheckboxes() {\n    const checkboxes = this.commonAllergies.map(allergy => {\n      return this.formBuilder.control(false);\n    });\n    return this.formBuilder.array(checkboxes);\n  }\n  setInitialCheckboxValues() {\n    const allergyControls = this.patientAllergiesForm.get('commonAllergies');\n    this.patient.allergies.forEach(allergy => {\n      const index = this.commonAllergies.findIndex(a => a.id === allergy.id);\n      if (index !== -1) {\n        allergyControls.controls[index].setValue(true);\n      }\n    });\n    console.log('Allergy Controls:', allergyControls.value);\n  }\n  getCommonAllergiesControl(index) {\n    const commonAllergiesArray = this.patientAllergiesForm.get('commonAllergies');\n    return commonAllergiesArray.controls[index];\n  }\n  onSubmitAllergies() {\n    this.patient.allergies = this.patientAllergiesForm.value.commonAllergies.map((checked, index) => checked ? this.commonAllergies[index] : null).filter(allergy => allergy !== null);\n    this.patientService.editPatient(this.patient).subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  onSubmit(personalInfo) {\n    if (personalInfo.valid) {\n      this.patientService.editPerson(this.person ? this.person : {}).subscribe({\n        next: res => {\n          console.log(res);\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n      this.patientService.editAddress(this.address ? this.address : {}).subscribe({\n        next: res => {\n          console.log(res);\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n      this.patientService.editEmergencyContact(this.emergencyContact ? this.emergencyContact : {}).subscribe({\n        next: res => {\n          console.log(res);\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    }\n  }\n  onAppointmentSubmit(appointmentInfo) {\n    if (this.appointment.id == \"00000000-0000-0000-0000-000000000000\") {\n      this.insertAppointment(appointmentInfo);\n    } else {\n      this.updateAppointment(appointmentInfo);\n    }\n  }\n  insertAppointment(appointmentInfo) {\n    this.patientService.postAppointment(this.appointment).subscribe({\n      next: res => {\n        this.appointments = res;\n        this.resetAppointmentForm(appointmentInfo);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  updateAppointment(appointmentInfo) {\n    this.patientService.editAppointment(this.appointment).subscribe({\n      next: res => {\n        this.appointments = res;\n        this.resetAppointmentForm(appointmentInfo);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  deleteAppointment(id) {\n    this.patientService.deleteAppointment(id).subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  populateAppointmentForm(appointment) {\n    this.appointment = Object.assign({}, appointment);\n  }\n  resetAppointmentForm(appointmentInfo) {\n    appointmentInfo.form.reset();\n    this.appointment = new AppointmentPostModel();\n  }\n  onPrescriptionSubmit(prescriptionInfo) {\n    if (this.prescription.id == \"00000000-0000-0000-0000-000000000000\") {\n      this.insertPrescription(prescriptionInfo);\n    } else {\n      this.updatePrescription(prescriptionInfo);\n    }\n  }\n  insertPrescription(prescriptionInfo) {\n    this.patientService.postPrescription(this.prescription).subscribe({\n      next: res => {\n        this.prescriptions = res;\n        this.resetPrescriptionForm(prescriptionInfo);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  updatePrescription(prescriptionInfo) {\n    this.patientService.editPrescription(this.prescription).subscribe({\n      next: res => {\n        this.prescriptions = res;\n        this.resetPrescriptionForm(prescriptionInfo);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  deletePrescription(id) {\n    this.patientService.deletePrescription(id).subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  populatePrescriptionForm(prescription) {\n    this.prescription = Object.assign({}, prescription);\n  }\n  resetPrescriptionForm(prescriptionInfo) {\n    prescriptionInfo.form.reset();\n    this.prescription = new PrescriptionPostModel();\n  }\n  onPrescriptionHistorySubmit(prescriptionHistoryInfo) {\n    if (this.prescriptionHistory.id == \"00000000-0000-0000-0000-000000000000\") {\n      this.insertPrescriptionHistory(prescriptionHistoryInfo);\n    } else {\n      this.updatePrescriptionHistory(prescriptionHistoryInfo);\n    }\n  }\n  insertPrescriptionHistory(prescriptionHistoryInfo) {\n    this.patientService.postPrescriptionHistory(this.prescriptionHistory).subscribe({\n      next: res => {\n        this.prescriptionHistories = res;\n        this.resetPrescriptionHistoryForm(prescriptionHistoryInfo);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  updatePrescriptionHistory(prescriptionHistoryInfo) {\n    this.patientService.editPrescriptionHistory(this.prescriptionHistory).subscribe({\n      next: res => {\n        this.prescriptionHistories = res;\n        this.resetPrescriptionHistoryForm(prescriptionHistoryInfo);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  deletePrescriptionHistory(id) {\n    this.patientService.deletePrescriptionHistory(id).subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  populatePrescriptionHistoryForm(prescriptionHistory) {\n    this.prescriptionHistory = Object.assign({}, prescriptionHistory);\n  }\n  resetPrescriptionHistoryForm(prescriptionHistoryInfo) {\n    prescriptionHistoryInfo.form.reset();\n    this.prescriptionHistory = new PrescriptionHistory();\n  }\n  isPrescriptionIdEmpty() {\n    return this.prescription.id === \"00000000-0000-0000-0000-000000000000\";\n  }\n}\nPatientUpdateComponent.ɵfac = function PatientUpdateComponent_Factory(t) {\n  return new (t || PatientUpdateComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProfileFormService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nPatientUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PatientUpdateComponent,\n  selectors: [[\"app-patient-update\"]],\n  decls: 154,\n  vars: 34,\n  consts: [[3, \"submit\"], [\"personalInfo\", \"ngForm\"], [1, \"row\"], [1, \"col-md-4\"], [\"for\", \"first-name\"], [\"id\", \"first-name\", \"type\", \"text\", \"name\", \"firstName\", 3, \"ngModel\", \"ngModelChange\"], [\"firstName\", \"ngModel\"], [\"for\", \"last-name\"], [\"id\", \"last-name\", \"type\", \"text\", \"name\", \"lastName\", 3, \"ngModel\", \"ngModelChange\"], [\"lastName\", \"ngModel\"], [\"for\", \"date-of-birth\"], [\"id\", \"date-of-birth\", \"type\", \"datetime\", \"name\", \"dateOfBirth\", 3, \"ngModel\", \"ngModelChange\"], [\"dateOfBirth\", \"ngModel\"], [\"for\", \"gender\"], [\"id\", \"gender\", \"type\", \"text\", \"name\", \"gender\", 3, \"ngModel\", \"ngModelChange\"], [\"gender\", \"ngModel\"], [\"for\", \"phone-number\"], [\"id\", \"phone-number\", \"type\", \"text\", \"name\", \"phoneNumber\", 3, \"ngModel\", \"ngModelChange\"], [\"phoneNumber\", \"ngModel\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"name\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"for\", \"street\"], [\"id\", \"street\", \"type\", \"text\", \"name\", \"street\", 3, \"ngModel\", \"ngModelChange\"], [\"street\", \"ngModel\"], [\"for\", \"city\"], [\"id\", \"city\", \"type\", \"text\", \"name\", \"city\", 3, \"ngModel\", \"ngModelChange\"], [\"city\", \"ngModel\"], [\"for\", \"country\"], [\"id\", \"country\", \"type\", \"text\", \"name\", \"country\", 3, \"ngModel\", \"ngModelChange\"], [\"country\", \"ngModel\"], [\"for\", \"zip-code\"], [\"id\", \"zip-code\", \"type\", \"text\", \"name\", \"zipCode\", 3, \"ngModel\", \"ngModelChange\"], [\"zipCode\", \"ngModel\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"name\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [\"for\", \"relationship\"], [\"id\", \"relationship\", \"type\", \"text\", \"name\", \"relationship\", 3, \"ngModel\", \"ngModelChange\"], [\"relationship\", \"ngModel\"], [\"for\", \"phoneNumber\"], [\"id\", \"phoneNumber\", \"type\", \"text\", \"name\", \"phoneNumber\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"col-md-3\"], [3, \"formGroup\", \"submit\"], [\"formArrayName\", \"commonAllergies\"], [4, \"ngFor\", \"ngForOf\"], [\"appointmentInfo\", \"ngForm\"], [\"type\", \"hidden\", \"name\", \"patientId\", 3, \"value\"], [\"for\", \"startTime\"], [\"id\", \"startTime\", \"type\", \"datetime-local\", \"name\", \"startTime\", 3, \"ngModel\", \"ngModelChange\"], [\"startTime\", \"ngModel\"], [\"for\", \"endTime\"], [\"id\", \"endTime\", \"type\", \"datetime-local\", \"name\", \"endTime\", 3, \"ngModel\", \"ngModelChange\"], [\"endTime\", \"ngModel\"], [\"for\", \"healthcareProvider\"], [\"id\", \"healthcareProvider\", \"name\", \"healthcareProviderId\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"appointmentType\"], [\"id\", \"appointmentType\", \"type\", \"text\", \"name\", \"appointmentType\", 3, \"ngModel\", \"ngModelChange\"], [\"appointmentType\", \"ngModel\"], [1, \"col-md-6\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"prescriptionInfo\", \"ngForm\"], [\"for\", \"issueDate\"], [\"id\", \"issueDate\", \"type\", \"date\", \"name\", \"issueDate\", 3, \"ngModel\", \"ngModelChange\"], [\"issueDate\", \"ngModel\"], [\"for\", \"medication\"], [\"id\", \"medication\", \"type\", \"text\", \"name\", \"medication\", 3, \"ngModel\", \"ngModelChange\"], [\"medication\", \"ngModel\"], [\"for\", \"dosage\"], [\"id\", \"dosage\", \"type\", \"text\", \"name\", \"dosage\", 3, \"ngModel\", \"ngModelChange\"], [\"dosage\", \"ngModel\"], [\"prescriptionHistoryInfo\", \"ngForm\"], [\"type\", \"hidden\", \"name\", \"id\", 3, \"value\"], [\"type\", \"hidden\", \"name\", \"prescriptionId\", 3, \"value\"], [\"for\", \"dispenseDate\"], [\"id\", \"dispenseDate\", \"type\", \"date\", \"name\", \"dispenseDate\", 3, \"ngModel\", \"ngModelChange\"], [\"dispenseDate\", \"ngModel\"], [\"for\", \"quantityDispensed\"], [\"id\", \"quantityDispensed\", \"type\", \"text\", \"name\", \"quantityDispensed\", 3, \"ngModel\", \"ngModelChange\"], [\"quantityDispensed\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"type\", \"checkbox\", 3, \"formControl\"], [3, \"value\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [2, \"color\", \"blue\", 3, \"click\"], [2, \"color\", \"red\", 3, \"click\"], [4, \"ngIf\"]],\n  template: function PatientUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r51 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function PatientUpdateComponent_Template_form_submit_0_listener() {\n        i0.ɵɵrestoreView(_r51);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\");\n      i0.ɵɵtext(5, \"Personal information\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"label\", 4);\n      i0.ɵɵtext(7, \"First Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5, 6);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.person.firstName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Last Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.person.lastName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"label\", 10);\n      i0.ɵɵtext(15, \"Date of birth: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 11, 12);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.person.dateOfBirth = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"label\", 13);\n      i0.ɵɵtext(19, \"Gender: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.person.gender = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"label\", 16);\n      i0.ɵɵtext(23, \"Phone number: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"input\", 17, 18);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.person.phoneNumber = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"label\", 19);\n      i0.ɵɵtext(27, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"input\", 20, 21);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_28_listener($event) {\n        return ctx.person.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\", 3)(31, \"h2\");\n      i0.ɵɵtext(32, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"label\", 22);\n      i0.ɵɵtext(34, \"Street: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"input\", 23, 24);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_35_listener($event) {\n        return ctx.address.street = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"label\", 25);\n      i0.ɵɵtext(38, \"City: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"input\", 26, 27);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_39_listener($event) {\n        return ctx.address.city = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"label\", 28);\n      i0.ɵɵtext(42, \"Country: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"input\", 29, 30);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_43_listener($event) {\n        return ctx.address.country = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"label\", 31);\n      i0.ɵɵtext(46, \"Zip Code: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"input\", 32, 33);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_47_listener($event) {\n        return ctx.address.zipCode = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(49, \"div\", 3)(50, \"h2\");\n      i0.ɵɵtext(51, \"Emergency contact\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"label\", 34);\n      i0.ɵɵtext(53, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"input\", 35, 36);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_54_listener($event) {\n        return ctx.emergencyContact.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"label\", 37);\n      i0.ɵɵtext(57, \"Relationship: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"input\", 38, 39);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_58_listener($event) {\n        return ctx.emergencyContact.relationship = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"label\", 40);\n      i0.ɵɵtext(61, \"Phone:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(62, \"input\", 41, 18);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_62_listener($event) {\n        return ctx.emergencyContact.phoneNumber = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(64, \"button\", 42);\n      i0.ɵɵtext(65, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(66, \"hr\");\n      i0.ɵɵelementStart(67, \"div\", 2)(68, \"div\", 43)(69, \"h2\");\n      i0.ɵɵtext(70, \"Patient's allergies\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(71, \"form\", 44);\n      i0.ɵɵlistener(\"submit\", function PatientUpdateComponent_Template_form_submit_71_listener() {\n        return ctx.onSubmitAllergies();\n      });\n      i0.ɵɵelementStart(72, \"div\", 45);\n      i0.ɵɵtemplate(73, PatientUpdateComponent_label_73_Template, 3, 2, \"label\", 46);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(74, \"button\", 42);\n      i0.ɵɵtext(75, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(76, \"div\", 43)(77, \"h2\");\n      i0.ɵɵtext(78, \"New Appointment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(79, \"form\", 0, 47);\n      i0.ɵɵlistener(\"submit\", function PatientUpdateComponent_Template_form_submit_79_listener() {\n        i0.ɵɵrestoreView(_r51);\n        const _r15 = i0.ɵɵreference(80);\n        return i0.ɵɵresetView(ctx.onAppointmentSubmit(_r15));\n      });\n      i0.ɵɵelementStart(81, \"div\");\n      i0.ɵɵelement(82, \"input\", 48);\n      i0.ɵɵelementStart(83, \"label\", 49);\n      i0.ɵɵtext(84, \"Start time: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(85, \"input\", 50, 51);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_85_listener($event) {\n        return ctx.appointment.startTime = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(87, \"label\", 52);\n      i0.ɵɵtext(88, \"End time: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(89, \"input\", 53, 54);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_89_listener($event) {\n        return ctx.appointment.endTime = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(91, \"label\", 55);\n      i0.ɵɵtext(92, \"Healthcare provider: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(93, \"select\", 56);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_select_ngModelChange_93_listener($event) {\n        return ctx.appointment.healthcareProviderId = $event;\n      });\n      i0.ɵɵtemplate(94, PatientUpdateComponent_option_94_Template, 2, 3, \"option\", 57);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(95, \"label\", 58);\n      i0.ɵɵtext(96, \"Appointment Type: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(97, \"input\", 59, 60);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_97_listener($event) {\n        return ctx.appointment.appointmentType = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(99, \"button\", 42);\n      i0.ɵɵtext(100, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(101, \"div\", 61)(102, \"h2\");\n      i0.ɵɵtext(103, \"Appointments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(104, PatientUpdateComponent_table_104_Template, 15, 1, \"table\", 62);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(105, \"hr\");\n      i0.ɵɵelementStart(106, \"div\", 2)(107, \"div\", 43)(108, \"h2\");\n      i0.ɵɵtext(109, \"Prescription\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(110, \"form\", 0, 63);\n      i0.ɵɵlistener(\"submit\", function PatientUpdateComponent_Template_form_submit_110_listener() {\n        i0.ɵɵrestoreView(_r51);\n        const _r21 = i0.ɵɵreference(111);\n        return i0.ɵɵresetView(ctx.onPrescriptionSubmit(_r21));\n      });\n      i0.ɵɵelementStart(112, \"div\");\n      i0.ɵɵelement(113, \"input\", 48);\n      i0.ɵɵelementStart(114, \"label\", 64);\n      i0.ɵɵtext(115, \"Issue date: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(116, \"input\", 65, 66);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_116_listener($event) {\n        return ctx.prescription.issueDate = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(118, \"label\", 67);\n      i0.ɵɵtext(119, \"Medication: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(120, \"input\", 68, 69);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_120_listener($event) {\n        return ctx.prescription.medication = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(122, \"label\", 55);\n      i0.ɵɵtext(123, \"Healthcare provider: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(124, \"select\", 56);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_select_ngModelChange_124_listener($event) {\n        return ctx.prescription.healthcareProviderId = $event;\n      });\n      i0.ɵɵtemplate(125, PatientUpdateComponent_option_125_Template, 2, 3, \"option\", 57);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(126, \"label\", 70);\n      i0.ɵɵtext(127, \"Dosage: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(128, \"input\", 71, 72);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_128_listener($event) {\n        return ctx.prescription.dosage = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(130, \"button\", 42);\n      i0.ɵɵtext(131, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(132, \"div\", 43)(133, \"h2\");\n      i0.ɵɵtext(134, \"History\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(135, \"form\", 0, 73);\n      i0.ɵɵlistener(\"submit\", function PatientUpdateComponent_Template_form_submit_135_listener() {\n        i0.ɵɵrestoreView(_r51);\n        const _r26 = i0.ɵɵreference(136);\n        return i0.ɵɵresetView(ctx.onPrescriptionHistorySubmit(_r26));\n      });\n      i0.ɵɵelementStart(137, \"div\");\n      i0.ɵɵelement(138, \"input\", 74)(139, \"input\", 75);\n      i0.ɵɵelementStart(140, \"label\", 76);\n      i0.ɵɵtext(141, \"Dispense date: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(142, \"input\", 77, 78);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_142_listener($event) {\n        return ctx.prescriptionHistory.dispenseDate = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(144, \"label\", 79);\n      i0.ɵɵtext(145, \"Quantity dispensed: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(146, \"input\", 80, 81);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_146_listener($event) {\n        return ctx.prescriptionHistory.quantityDispensed = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(148, \"button\", 82);\n      i0.ɵɵtext(149, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(150, \"div\", 61)(151, \"h2\");\n      i0.ɵɵtext(152, \"All prescriptions and history\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(153, PatientUpdateComponent_table_153_Template, 15, 1, \"table\", 62);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.firstName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.lastName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.dateOfBirth);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.gender);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.phoneNumber);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.email);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.address.street);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.address.city);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.address.country);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.address.zipCode);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.emergencyContact.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.emergencyContact.relationship);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.emergencyContact.phoneNumber);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.patientAllergiesForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.commonAllergies);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"value\", ctx.appointment.patientId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.appointment.startTime);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.appointment.endTime);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.appointment.healthcareProviderId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.healthcareProviders);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.appointment.appointmentType);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.appointments.length);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"value\", ctx.prescription.patientId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.prescription.issueDate);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.prescription.medication);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.prescription.healthcareProviderId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.healthcareProviders);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.prescription.dosage);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"value\", ctx.prescriptionHistory.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", ctx.prescriptionHistory.prescriptionId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.prescriptionHistory.dispenseDate);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.prescriptionHistory.quantityDispensed);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.isPrescriptionIdEmpty());\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.prescriptions.length);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i3.FormControlDirective, i3.FormGroupDirective, i3.FormArrayName],\n  styles: [\"form[_ngcontent-%COMP%] {\\r\\n    padding-top: 1rem;\\r\\n  }\\r\\n  \\r\\nlabel[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin: .5em 0;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  margin: 1rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGF0aWVudC11cGRhdGUvcGF0aWVudC11cGRhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtFQUNuQjs7QUFFRjtJQUNJLGNBQWM7SUFDZCxjQUFjO0lBQ2QsaUJBQWlCO0VBQ25COztBQUVGO0VBQ0UsWUFBWTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XHJcbiAgICBwYWRkaW5nLXRvcDogMXJlbTtcclxuICB9XHJcbiAgXHJcbmxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luOiAuNWVtIDA7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcblxyXG5idXR0b24ge1xyXG4gIG1hcmdpbjogMXJlbTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAKA,SAASA,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,gBAAgB,QAAQ,kCAAkC;AACnE,SAASC,oBAAoB,QAAQ,sCAAsC;AAC3E,SAASC,qBAAqB,QAAQ,uCAAuC;AAE7E,SAASC,OAAO,QAAQ,yBAAyB;AAEjD,SAASC,mBAAmB,QAAQ,qCAAqC;;;;;;;;IC6DjEC,6BAA8D;IAC5DA,4BAAoE;IACpEA,YACF;IAAAA,iBAAQ;;;;;;IAFiBA,eAA4C;IAA5CA,sEAA4C;IACnEA,eACF;IADEA,iDACF;;;;;IAqBIA,kCAA2E;IACvEA,YACJ;IAAAA,iBAAS;;;;IAF4CA,uCAAqB;IACtEA,eACJ;IADIA,iGACJ;;;;;;IAwBJA,0BAA6C;IACvCA;MAAA;MAAA;MAAA;MAAA,OAASA,+DAAoC;IAAA,EAAC;IAAsBA,sBAAM;IAAAA,iBAAK;IACnFA,0BAAI;IAAAA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAAyB;IAAAA,iBAAK;IAClCA,0BAAI;IAAAA,YAA0G;IAAAA,iBAAK;IACnHA,0BAAI;IAAAA,aAAiC;IAAAA,iBAAK;IAC1CA,+BAAoE;IAAhEA;MAAA;MAAA;MAAA;MAAA,OAASA,4DAAiC;IAAA,EAAC;IAAqBA,uBAAM;IAAAA,iBAAK;;;;IAJ3EA,eAA2B;IAA3BA,+CAA2B;IAC3BA,eAAyB;IAAzBA,6CAAyB;IACzBA,eAA0G;IAA1GA,2IAA0G;IAC1GA,eAAiC;IAAjCA,qDAAiC;;;;;IAjB3CA,iCAA4F;IAGtFA,qBAAS;IACTA,0BAAI;IAAAA,0BAAU;IAAAA,iBAAK;IACnBA,0BAAI;IAAAA,wBAAQ;IAAAA,iBAAK;IACjBA,0BAAI;IAAAA,kCAAkB;IAAAA,iBAAK;IAC3BA,2BAAI;IAAAA,qBAAI;IAAAA,iBAAK;IACbA,sBAAS;IACXA,iBAAK;IAEPA,8BAAO;IACLA,mFAOK;IACPA,iBAAQ;;;;IARsBA,gBAAe;IAAfA,8CAAe;;;;;IA6BvCA,kCAA2E;IACvEA,YACJ;IAAAA,iBAAS;;;;IAF4CA,uCAAqB;IACtEA,eACJ;IADIA,iGACJ;;;;;;IA0DEA,0BAA6D;IACvDA;MAAA;MAAA;MAAA;MAAA,OAASA,mEAAwC;IAAA,EAAC;IAAsBA,sBAAM;IAAAA,iBAAK;IACvFA,0BAAI;IAAAA,YAAwB;IAAAA,iBAAK;IACjCA,0BAAI;IAAAA,YAA6B;IAAAA,iBAAK;IACtCA,8BAAwE;IAApEA;MAAA;MAAA;MAAA;MAAA,OAASA,gEAAqC;IAAA,EAAC;IAAqBA,sBAAM;IAAAA,iBAAK;;;;IAF/EA,eAAwB;IAAxBA,8CAAwB;IACxBA,eAA6B;IAA7BA,mDAA6B;;;;;IAbtCA,6BAAuD;IAGlDA,qBAAS;IACTA,0BAAI;IAAAA,6BAAa;IAAAA,iBAAK;IACtBA,0BAAI;IAAAA,kCAAkB;IAAAA,iBAAK;IAC3BA,qBAAS;IACXA,iBAAK;IAEPA,6BAAO;IACLA,iGAKK;IACPA,iBAAQ;;;;IANkBA,gBAAmC;IAAnCA,8DAAmC;;;;;;IAjBnEA,0BAA+C;IACzCA;MAAA;MAAA;MAAA;MAAA,OAASA,iEAAsC;IAAA,EAAC;IAAsBA,sBAAM;IAAAA,iBAAK;IACrFA,0BAAI;IAAAA,YAA4B;IAAAA,iBAAK;IACrCA,0BAAI;IAAAA,YAA4G;IAAAA,iBAAK;IACrHA,0BAAI;IAAAA,YAA6B;IAAAA,iBAAK;IACtCA,0BAAI;IAAAA,aAAyB;IAAAA,iBAAK;IAClCA,+BAAsE;IAAlEA;MAAA;MAAA;MAAA;MAAA,OAASA,8DAAmC;IAAA,EAAC;IAAqBA,uBAAM;IAAAA,iBAAK;IAC9EA,+FAiBQ;IACbA,iBAAK;;;;IAvBCA,eAA4B;IAA5BA,gDAA4B;IAC5BA,eAA4G;IAA5GA,6IAA4G;IAC5GA,eAA6B;IAA7BA,iDAA6B;IAC7BA,eAAyB;IAAzBA,6CAAyB;IAElBA,eAA6C;IAA7CA,kEAA6C;;;;;IAnB9DA,iCAA6F;IAGvFA,qBAAS;IACTA,0BAAI;IAAAA,0BAAU;IAAAA,iBAAK;IACnBA,0BAAI;IAAAA,mCAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,0BAAU;IAAAA,iBAAK;IACnBA,2BAAI;IAAAA,uBAAM;IAAAA,iBAAK;IACfA,sBAAS;IACXA,iBAAK;IAEPA,8BAAO;IACLA,mFAyBK;IACPA,iBAAQ;;;;IA1BuBA,gBAAgB;IAAhBA,+CAAgB;;;AD/KnD,OAAM,MAAOC,sBAAsB;EAiBjCC,YACUC,KAAqB,EACrBC,cAAkC,EAClCC,WAAwB;IAFxB,UAAK,GAALF,KAAK;IACL,mBAAc,GAAdC,cAAc;IACd,gBAAW,GAAXC,WAAW;IAlBrB,aAAQ,GAAW,EAAE;IACrB,WAAM,GAAW,IAAIZ,MAAM,EAAE;IAC7B,YAAO,GAAY,IAAIC,OAAO,EAAE;IAChC,qBAAgB,GAAqB,IAAIC,gBAAgB,EAAE;IAC3D,YAAO,GAAY,IAAIG,OAAO,EAAE;IAChC,oBAAe,GAAc,EAAE;IAC/B,wBAAmB,GAAyB,EAAE;IAC9C,iBAAY,GAAkB,EAAE;IAChC,kBAAa,GAAmB,EAAE;IAClC,0BAAqB,GAA0B,EAAE;IAEjD,gBAAW,GAAwB,IAAIF,oBAAoB,EAAE;IAC7D,iBAAY,GAA0B,IAAIC,qBAAqB,EAAE;IACjE,wBAAmB,GAAwB,IAAIE,mBAAmB,EAAE;EAMjE;EAEHO,QAAQ;IACN,IAAI,CAACH,KAAK,CAACI,MAAM,CAACC,SAAS,CAAED,MAAM,IAAI;MACrC,IAAI,CAACE,QAAQ,GAAGF,MAAM,CAAC,IAAI,CAAC;MAC5B,IAAI,CAACG,QAAQ,EAAE;IACjB,CAAC,CAAC;EACJ;EAEAA,QAAQ;IACJ,IAAI,CAACN,cAAc,CAACO,cAAc,CAAC,IAAI,CAACF,QAAQ,CAAC,CAACD,SAAS,CAAEI,IAAI,IAAI;MACrE,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACC,MAAM;MACzB,IAAI,CAACC,OAAO,GAAGF,IAAI,CAACE,OAAO;MAC3B,IAAI,CAACC,gBAAgB,GAAGH,IAAI,CAACG,gBAAgB;MAC7C,IAAI,CAACC,OAAO,GAAGJ,IAAI,CAACI,OAAO;MAC3B,IAAI,CAACC,eAAe,GAAGL,IAAI,CAACK,eAAe;MAC3C,IAAI,CAACC,mBAAmB,GAAGN,IAAI,CAACM,mBAAmB;MACnD,IAAI,CAACC,YAAY,GAAGP,IAAI,CAACO,YAAY;MACrC,IAAI,CAACC,aAAa,GAAGR,IAAI,CAACQ,aAAa;MACvC,IAAI,CAACC,SAAS,EAAE;MAChB,IAAI,CAACC,WAAW,CAACC,SAAS,GAAG,IAAI,CAACP,OAAO,CAACQ,EAAE;MAC5C,IAAI,CAACC,YAAY,CAACF,SAAS,GAAG,IAAI,CAACP,OAAO,CAACQ,EAAE;IAChD,CAAC,CAAC;EACH;EAEAH,SAAS;IACP,IAAI,CAACK,oBAAoB,GAAG,IAAI,CAACrB,WAAW,CAACsB,KAAK,CAAC;MACjDV,eAAe,EAAE,IAAI,CAACW,sBAAsB;KAC7C,CAAC;IAEF,IAAI,CAACC,wBAAwB,EAAE;EACjC;EAEAD,sBAAsB;IACpB,MAAME,UAAU,GAAG,IAAI,CAACb,eAAe,CAACc,GAAG,CAACC,OAAO,IAAG;MACpD,OAAO,IAAI,CAAC3B,WAAW,CAAC4B,OAAO,CAAC,KAAK,CAAC;IACxC,CAAC,CAAC;IAEF,OAAO,IAAI,CAAC5B,WAAW,CAAC6B,KAAK,CAACJ,UAAU,CAAC;EAC3C;EAEAD,wBAAwB;IACtB,MAAMM,eAAe,GAAG,IAAI,CAACT,oBAAoB,CAACU,GAAG,CAAC,iBAAiB,CAAc;IAErF,IAAI,CAACpB,OAAO,CAACqB,SAAS,CAACC,OAAO,CAACN,OAAO,IAAG;MACvC,MAAMO,KAAK,GAAG,IAAI,CAACtB,eAAe,CAACuB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACjB,EAAE,KAAKQ,OAAO,CAACR,EAAE,CAAC;MACtE,IAAIe,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBJ,eAAe,CAACO,QAAQ,CAACH,KAAK,CAAC,CAACI,QAAQ,CAAC,IAAI,CAAC;;IAElD,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEV,eAAe,CAACW,KAAK,CAAC;EACzD;EAEAC,yBAAyB,CAACR,KAAa;IACrC,MAAMS,oBAAoB,GAAG,IAAI,CAACtB,oBAAoB,CAACU,GAAG,CAAC,iBAAiB,CAAc;IAC1F,OAAOY,oBAAoB,CAACN,QAAQ,CAACH,KAAK,CAAgB;EAC5D;EAEAU,iBAAiB;IACf,IAAI,CAACjC,OAAO,CAACqB,SAAS,GAAG,IAAI,CAACX,oBAAoB,CAACoB,KAAK,CAAC7B,eAAe,CACrEc,GAAG,CAAC,CAACmB,OAAgB,EAAEX,KAAa,KAAKW,OAAO,GAAG,IAAI,CAACjC,eAAe,CAACsB,KAAK,CAAC,GAAG,IAAI,CAAC,CACtFY,MAAM,CAAEnB,OAAuB,IAAyBA,OAAO,KAAK,IAAI,CAAC;IAC5E,IAAI,CAAC5B,cAAc,CAACgD,WAAW,CAAC,IAAI,CAACpC,OAAO,CAAC,CAC5CR,SAAS,CAAC;MACT6C,IAAI,EAAEC,GAAG,IAAG;QACVV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;MAClB,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAG;QACXZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EAEAC,QAAQ,CAACC,YAAoB;IAC3B,IAAGA,YAAY,CAACC,KAAK,EAAC;MACpB,IAAI,CAACvD,cAAc,CAACwD,UAAU,CAAC,IAAI,CAAC/C,MAAM,GAAE,IAAI,CAACA,MAAM,GAAE,EAAY,CAAC,CACvEL,SAAS,CAAC;QACT6C,IAAI,EAAEC,GAAG,IAAG;UACVV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;QAClB,CAAC;QACDC,KAAK,EAAEC,GAAG,IAAG;UACXZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;QAClB;OACD,CAAC;MACF,IAAI,CAACpD,cAAc,CAACyD,WAAW,CAAC,IAAI,CAAC/C,OAAO,GAAE,IAAI,CAACA,OAAO,GAAE,EAAa,CAAC,CACzEN,SAAS,CAAC;QACT6C,IAAI,EAAEC,GAAG,IAAG;UACVV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;QAClB,CAAC;QACDC,KAAK,EAAEC,GAAG,IAAG;UACXZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;QAClB;OACD,CAAC;MACF,IAAI,CAACpD,cAAc,CAAC0D,oBAAoB,CAAC,IAAI,CAAC/C,gBAAgB,GAAE,IAAI,CAACA,gBAAgB,GAAE,EAAsB,CAAC,CAC7GP,SAAS,CAAC;QACT6C,IAAI,EAAEC,GAAG,IAAG;UACVV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;QAClB,CAAC;QACDC,KAAK,EAAEC,GAAG,IAAG;UACXZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;QAClB;OACD,CAAC;;EAEJ;EACAO,mBAAmB,CAACC,eAAuB;IAC1C,IAAG,IAAI,CAAC1C,WAAW,CAACE,EAAE,IAAI,sCAAsC,EAAC;MAChE,IAAI,CAACyC,iBAAiB,CAACD,eAAe,CAAC;KACvC,MACG;MACH,IAAI,CAACE,iBAAiB,CAACF,eAAe,CAAC;;EAEzC;EACAC,iBAAiB,CAACD,eAAuB;IACvC,IAAI,CAAC5D,cAAc,CAAC+D,eAAe,CAAC,IAAI,CAAC7C,WAAW,CAAC,CACpDd,SAAS,CAAC;MACT6C,IAAI,EAAEC,GAAG,IAAG;QACV,IAAI,CAACnC,YAAY,GAAGmC,GAAoB;QACxC,IAAI,CAACc,oBAAoB,CAACJ,eAAe,CAAC;MAC5C,CAAC;MACDT,KAAK,EAAEC,GAAG,IAAG;QACXZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EACAU,iBAAiB,CAACF,eAAuB;IACvC,IAAI,CAAC5D,cAAc,CAACiE,eAAe,CAAC,IAAI,CAAC/C,WAAW,CAAC,CACpDd,SAAS,CAAC;MACT6C,IAAI,EAAEC,GAAG,IAAG;QACV,IAAI,CAACnC,YAAY,GAAGmC,GAAoB;QACxC,IAAI,CAACc,oBAAoB,CAACJ,eAAe,CAAC;MAC5C,CAAC;MACDT,KAAK,EAAEC,GAAG,IAAG;QACXZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EACAc,iBAAiB,CAAC9C,EAAU;IAC1B,IAAI,CAACpB,cAAc,CAACkE,iBAAiB,CAAC9C,EAAE,CAAC,CACxChB,SAAS,CAAC;MACT6C,IAAI,EAAEC,GAAG,IAAG;QACVV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;MAClB,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAG;QACXZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EACAe,uBAAuB,CAACjD,WAAiC;IACvD,IAAI,CAACA,WAAW,GAAGkD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEnD,WAAW,CAAC;EACnD;EACA8C,oBAAoB,CAACJ,eAAuB;IAC1CA,eAAe,CAACU,IAAI,CAACC,KAAK,EAAE;IAC5B,IAAI,CAACrD,WAAW,GAAG,IAAI1B,oBAAoB,EAAE;EAC/C;EAEAgF,oBAAoB,CAACC,gBAAwB;IAC3C,IAAG,IAAI,CAACpD,YAAY,CAACD,EAAE,IAAI,sCAAsC,EAAC;MAChE,IAAI,CAACsD,kBAAkB,CAACD,gBAAgB,CAAC;KACzC,MACG;MACH,IAAI,CAACE,kBAAkB,CAACF,gBAAgB,CAAC;;EAE7C;EAEAC,kBAAkB,CAACD,gBAAwB;IACzC,IAAI,CAACzE,cAAc,CAAC4E,gBAAgB,CAAC,IAAI,CAACvD,YAAY,CAAC,CACtDjB,SAAS,CAAC;MACT6C,IAAI,EAAEC,GAAG,IAAG;QACV,IAAI,CAAClC,aAAa,GAAGkC,GAAqB;QAC1C,IAAI,CAAC2B,qBAAqB,CAACJ,gBAAgB,CAAC;MAC9C,CAAC;MACDtB,KAAK,EAAEC,GAAG,IAAG;QACXZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EAEAuB,kBAAkB,CAACF,gBAAwB;IACzC,IAAI,CAACzE,cAAc,CAAC8E,gBAAgB,CAAC,IAAI,CAACzD,YAAY,CAAC,CACtDjB,SAAS,CAAC;MACT6C,IAAI,EAAEC,GAAG,IAAG;QACV,IAAI,CAAClC,aAAa,GAAGkC,GAAqB;QAC1C,IAAI,CAAC2B,qBAAqB,CAACJ,gBAAgB,CAAC;MAC9C,CAAC;MACDtB,KAAK,EAAEC,GAAG,IAAG;QACXZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EAEA2B,kBAAkB,CAAC3D,EAAU;IAC3B,IAAI,CAACpB,cAAc,CAAC+E,kBAAkB,CAAC3D,EAAE,CAAC,CACzChB,SAAS,CAAC;MACT6C,IAAI,EAAEC,GAAG,IAAG;QACVV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;MAClB,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAG;QACXZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EACA4B,wBAAwB,CAAC3D,YAAmC;IAC1D,IAAI,CAACA,YAAY,GAAG+C,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEhD,YAAY,CAAC;EACrD;EACAwD,qBAAqB,CAACJ,gBAAwB;IAC5CA,gBAAgB,CAACH,IAAI,CAACC,KAAK,EAAE;IAC7B,IAAI,CAAClD,YAAY,GAAG,IAAI5B,qBAAqB,EAAE;EACjD;EAEAwF,2BAA2B,CAACC,uBAA+B;IACzD,IAAG,IAAI,CAACC,mBAAmB,CAAC/D,EAAE,IAAI,sCAAsC,EAAC;MACvE,IAAI,CAACgE,yBAAyB,CAACF,uBAAuB,CAAC;KACvD,MACG;MACH,IAAI,CAACG,yBAAyB,CAACH,uBAAuB,CAAC;;EAE3D;EAEAE,yBAAyB,CAACF,uBAA+B;IACvD,IAAI,CAAClF,cAAc,CAACsF,uBAAuB,CAAC,IAAI,CAACH,mBAAmB,CAAC,CACpE/E,SAAS,CAAC;MACT6C,IAAI,EAAEC,GAAG,IAAG;QACV,IAAI,CAACqC,qBAAqB,GAAGrC,GAA4B;QACzD,IAAI,CAACsC,4BAA4B,CAACN,uBAAuB,CAAC;MAC5D,CAAC;MACD/B,KAAK,EAAEC,GAAG,IAAG;QACXZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EAEAiC,yBAAyB,CAACH,uBAA+B;IACvD,IAAI,CAAClF,cAAc,CAACyF,uBAAuB,CAAC,IAAI,CAACN,mBAAmB,CAAC,CACpE/E,SAAS,CAAC;MACT6C,IAAI,EAAEC,GAAG,IAAG;QACV,IAAI,CAACqC,qBAAqB,GAAGrC,GAA4B;QACzD,IAAI,CAACsC,4BAA4B,CAACN,uBAAuB,CAAC;MAC5D,CAAC;MACD/B,KAAK,EAAEC,GAAG,IAAG;QACXZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EAEAsC,yBAAyB,CAACtE,EAAU;IAClC,IAAI,CAACpB,cAAc,CAAC0F,yBAAyB,CAACtE,EAAE,CAAC,CAChDhB,SAAS,CAAC;MACT6C,IAAI,EAAEC,GAAG,IAAG;QACVV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;MAClB,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAG;QACXZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EACAuC,+BAA+B,CAACR,mBAAwC;IACtE,IAAI,CAACA,mBAAmB,GAAGf,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEc,mBAAmB,CAAC;EACnE;EACAK,4BAA4B,CAACN,uBAA+B;IAC1DA,uBAAuB,CAACZ,IAAI,CAACC,KAAK,EAAE;IACpC,IAAI,CAACY,mBAAmB,GAAG,IAAIxF,mBAAmB,EAAE;EACtD;EACAiG,qBAAqB;IACnB,OAAO,IAAI,CAACvE,YAAY,CAACD,EAAE,KAAK,sCAAsC;EAC1E;;AA7RavB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAgG;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCrBnCrG,kCAA+D;MAAlCA;QAAAA;QAAA;QAAA,OAAUA,gCAAsB;MAAA,EAAC;MAC5DA,8BAAiB;MAETA,oCAAoB;MAAAA,iBAAK;MAC7BA,gCAAwB;MAAAA,4BAAY;MAAAA,iBAAQ;MAC5CA,mCACiC;MAAjCA;QAAA;MAAA,EAAgC;MADhCA,iBACiC;MAEjCA,iCAAuB;MAAAA,4BAAW;MAAAA,iBAAQ;MAC1CA,oCACgC;MAAhCA;QAAA;MAAA,EAA+B;MAD/BA,iBACgC;MAEhCA,kCAA2B;MAAAA,gCAAe;MAAAA,iBAAQ;MAClDA,sCACmC;MAAnCA;QAAA;MAAA,EAAkC;MADlCA,iBACmC;MAEnCA,kCAAoB;MAAAA,yBAAQ;MAAAA,iBAAQ;MACpCA,sCAC8B;MAA9BA;QAAA;MAAA,EAA6B;MAD7BA,iBAC8B;MAE9BA,kCAA0B;MAAAA,+BAAc;MAAAA,iBAAQ;MAChDA,sCACmC;MAAnCA;QAAA;MAAA,EAAkC;MADlCA,iBACmC;MAEnCA,kCAAmB;MAAAA,wBAAO;MAAAA,iBAAQ;MAClCA,sCAC6B;MAA7BA;QAAA;MAAA,EAA4B;MAD5BA,iBAC6B;MAG/BA,+BAAsB;MACdA,wBAAO;MAAAA,iBAAK;MAEhBA,kCAAoB;MAAAA,yBAAQ;MAAAA,iBAAQ;MACpCA,sCAC+B;MAA/BA;QAAA;MAAA,EAA8B;MAD9BA,iBAC+B;MAE/BA,kCAAkB;MAAAA,uBAAM;MAAAA,iBAAQ;MAChCA,sCAC6B;MAA7BA;QAAA;MAAA,EAA4B;MAD5BA,iBAC6B;MAE7BA,kCAAqB;MAAAA,0BAAS;MAAAA,iBAAQ;MACtCA,sCACgC;MAAhCA;QAAA;MAAA,EAA+B;MAD/BA,iBACgC;MAEhCA,kCAAsB;MAAAA,2BAAU;MAAAA,iBAAQ;MACxCA,sCACgC;MAAhCA;QAAA;MAAA,EAA+B;MAD/BA,iBACgC;MAGpCA,+BAAsB;MAChBA,kCAAiB;MAAAA,iBAAK;MAE1BA,kCAAkB;MAAAA,sBAAK;MAAAA,iBAAQ;MAC/BA,sCACsC;MAAtCA;QAAA;MAAA,EAAqC;MADrCA,iBACsC;MAEtCA,kCAA0B;MAAAA,+BAAc;MAAAA,iBAAQ;MAChDA,sCAC8C;MAA9CA;QAAA;MAAA,EAA6C;MAD7CA,iBAC8C;MAE9CA,kCAAyB;MAAAA,uBAAM;MAAAA,iBAAQ;MACvCA,sCAC6C;MAA7CA;QAAA;MAAA,EAA4C;MAD5CA,iBAC6C;MAIjDA,mCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;MAE/DA,sBAAK;MACLA,+BAAiB;MAETA,oCAAmB;MAAAA,iBAAK;MAC5BA,iCAAwE;MAA/BA;QAAA,OAAUsG,uBAAmB;MAAA,EAAC;MACrEtG,gCAAqC;MACnCA,8EAGQ;MACVA,iBAAM;MAENA,mCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;MAGjEA,gCAAsB;MAChBA,gCAAe;MAAAA,iBAAK;MACxBA,oCAAgF;MAAhDA;QAAAA;QAAA;QAAA,OAAUA,4CAAoC;MAAA,EAAC;MAC7EA,4BAAK;MACHA,6BAAwE;MACxEA,kCAAuB;MAAAA,6BAAY;MAAAA,iBAAQ;MAC3CA,sCACsC;MAAtCA;QAAA;MAAA,EAAqC;MADrCA,iBACsC;MAEtCA,kCAAqB;MAAAA,2BAAU;MAAAA,iBAAQ;MACvCA,sCACoC;MAApCA;QAAA;MAAA,EAAmC;MADnCA,iBACoC;MAEpCA,kCAAgC;MAAAA,sCAAqB;MAAAA,iBAAQ;MAC7DA,mCAA2G;MAA/CA;QAAA;MAAA,EAA8C;MACtGA,gFAES;MACbA,iBAAS;MAETA,kCAA6B;MAAAA,mCAAkB;MAAAA,iBAAQ;MACvDA,sCAC4C;MAA5CA;QAAA;MAAA,EAA2C;MAD3CA,iBAC4C;MAE9CA,mCAA8C;MAAAA,wBAAM;MAAAA,iBAAS;MAGjEA,iCAAsB;MAChBA,8BAAY;MAAAA,iBAAK;MACrBA,iFAqBQ;MACVA,iBAAM;MAERA,uBAAK;MACLA,gCAAiB;MAEXA,8BAAY;MAAAA,iBAAK;MACrBA,qCAAmF;MAAlDA;QAAAA;QAAA;QAAA,OAAUA,6CAAsC;MAAA,EAAC;MAChFA,6BAAK;MACDA,8BAAyE;MACzEA,mCAAuB;MAAAA,8BAAY;MAAAA,iBAAQ;MAC3CA,uCACuC;MAAvCA;QAAA;MAAA,EAAsC;MADtCA,iBACuC;MAEvCA,mCAAwB;MAAAA,8BAAY;MAAAA,iBAAQ;MAC5CA,uCACwC;MAAxCA;QAAA;MAAA,EAAuC;MADvCA,iBACwC;MAExCA,mCAAgC;MAAAA,uCAAqB;MAAAA,iBAAQ;MAC7DA,oCAA4G;MAAhDA;QAAA;MAAA,EAA+C;MACvGA,kFAES;MACbA,iBAAS;MAETA,mCAAoB;MAAAA,0BAAQ;MAAAA,iBAAQ;MACpCA,uCACoC;MAApCA;QAAA;MAAA,EAAmC;MADnCA,iBACoC;MAExCA,oCAA8C;MAAAA,wBAAM;MAAAA,iBAAS;MAGhEA,iCAAsB;MACjBA,yBAAO;MAAAA,iBAAK;MAChBA,qCAAwG;MAAhEA;QAAAA;QAAA;QAAA,OAAUA,oDAAoD;MAAA,EAAC;MACrGA,6BAAK;MACDA,8BAAkE;MAElEA,mCAA0B;MAAAA,iCAAe;MAAAA,iBAAQ;MACjDA,uCACiD;MAAjDA;QAAA;MAAA,EAAgD;MADhDA,iBACiD;MAEjDA,mCAA+B;MAAAA,sCAAoB;MAAAA,iBAAQ;MAC3DA,uCACsD;MAAtDA;QAAA;MAAA,EAAqD;MADrDA,iBACsD;MAE1DA,oCAAmF;MAAAA,wBAAM;MAAAA,iBAAS;MAGrGA,iCAAsB;MACjBA,+CAA6B;MAAAA,iBAAK;MACtCA,iFAuCQ;MACTA,iBAAM;;;MA1NDA,eAAgC;MAAhCA,8CAAgC;MAIhCA,eAA+B;MAA/BA,6CAA+B;MAI/BA,eAAkC;MAAlCA,gDAAkC;MAIlCA,eAA6B;MAA7BA,2CAA6B;MAI7BA,eAAkC;MAAlCA,gDAAkC;MAIlCA,eAA4B;MAA5BA,0CAA4B;MAQ1BA,eAA8B;MAA9BA,4CAA8B;MAI9BA,eAA4B;MAA5BA,0CAA4B;MAI5BA,eAA+B;MAA/BA,6CAA+B;MAI/BA,eAA+B;MAA/BA,6CAA+B;MAQjCA,eAAqC;MAArCA,mDAAqC;MAIrCA,eAA6C;MAA7CA,2DAA6C;MAI7CA,eAA4C;MAA5CA,0DAA4C;MAUxCA,eAAkC;MAAlCA,oDAAkC;MAETA,eAAoB;MAApBA,6CAAoB;MAaTA,eAAiC;MAAjCA,iDAAiC;MAGvEA,eAAqC;MAArCA,mDAAqC;MAIrCA,eAAmC;MAAnCA,iDAAmC;MAGyBA,eAA8C;MAA9CA,8DAA8C;MACzEA,eAAsB;MAAtBA,iDAAsB;MAOvDA,eAA2C;MAA3CA,yDAA2C;MAOkBA,eAAyB;MAAzBA,8CAAyB;MA8BhDA,eAAkC;MAAlCA,kDAAkC;MAGxEA,eAAsC;MAAtCA,oDAAsC;MAItCA,eAAuC;MAAvCA,qDAAuC;MAGqBA,eAA+C;MAA/CA,+DAA+C;MAC1EA,eAAsB;MAAtBA,iDAAsB;MAOvDA,eAAmC;MAAnCA,iDAAmC;MASJA,gBAAkC;MAAlCA,kDAAkC;MACtBA,eAA8C;MAA9CA,8DAA8C;MAGzFA,eAAgD;MAAhDA,8DAAgD;MAIhDA,eAAqD;MAArDA,mEAAqD;MAEXA,eAAoC;MAApCA,sDAAoC;MAKnBA,eAA0B;MAA1BA,+CAA0B","names":["Person","Address","EmergencyContact","AppointmentPostModel","PrescriptionPostModel","Patient","PrescriptionHistory","i0","PatientUpdateComponent","constructor","route","patientService","formBuilder","ngOnInit","params","subscribe","personId","loadData","getPatientData","data","person","address","emergencyContact","patient","commonAllergies","healthcareProviders","appointments","prescriptions","buildForm","appointment","patientId","id","prescription","patientAllergiesForm","group","buildAllergyCheckboxes","setInitialCheckboxValues","checkboxes","map","allergy","control","array","allergyControls","get","allergies","forEach","index","findIndex","a","controls","setValue","console","log","value","getCommonAllergiesControl","commonAllergiesArray","onSubmitAllergies","checked","filter","editPatient","next","res","error","err","onSubmit","personalInfo","valid","editPerson","editAddress","editEmergencyContact","onAppointmentSubmit","appointmentInfo","insertAppointment","updateAppointment","postAppointment","resetAppointmentForm","editAppointment","deleteAppointment","populateAppointmentForm","Object","assign","form","reset","onPrescriptionSubmit","prescriptionInfo","insertPrescription","updatePrescription","postPrescription","resetPrescriptionForm","editPrescription","deletePrescription","populatePrescriptionForm","onPrescriptionHistorySubmit","prescriptionHistoryInfo","prescriptionHistory","insertPrescriptionHistory","updatePrescriptionHistory","postPrescriptionHistory","prescriptionHistories","resetPrescriptionHistoryForm","editPrescriptionHistory","deletePrescriptionHistory","populatePrescriptionHistoryForm","isPrescriptionIdEmpty","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Kateryna_Yavna\\source\\repos\\HealthHubPro\\HealthHubPro\\HealthHub2\\HealthHubPro\\ClientApp\\src\\app\\patient-update\\patient-update.component.ts","C:\\Users\\Kateryna_Yavna\\source\\repos\\HealthHubPro\\HealthHubPro\\HealthHub2\\HealthHubPro\\ClientApp\\src\\app\\patient-update\\patient-update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, NgForm, FormControl } from '@angular/forms';\nimport { Allergy } from '../models/Allergy.model';\nimport { HealthcareProvider } from '../models/HealthcareProvider.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { Person } from '../models/Person.model';\nimport { Address } from '../models/Address.model';\nimport { EmergencyContact } from '../models/EmergencyContact.model';\nimport { AppointmentPostModel } from '../models/AppointmentPostModel.model';\nimport { PrescriptionPostModel } from '../models/PrescriptionPostModel.model';\nimport { ProfileFormService } from '../services/profile-form.service';\nimport { Patient } from '../models/Patient.model';\nimport { Appointment } from '../models/Appointment.model';\nimport { PrescriptionHistory } from '../models/PrescriptionHistory.model';\nimport { Prescription } from '../models/Prescription.model';\n\n@Component({\n  selector: 'app-patient-update',\n  templateUrl: './patient-update.component.html',\n  styleUrls: ['./patient-update.component.css']\n})\nexport class PatientUpdateComponent implements OnInit {\n\n  personId: string = \"\";\n  person: Person = new Person();\n  address: Address = new Address();\n  emergencyContact: EmergencyContact = new EmergencyContact();\n  patient: Patient = new Patient();\n  commonAllergies: Allergy[] = [];\n  healthcareProviders: HealthcareProvider[] = [];\n  appointments: Appointment[] = [];\n  prescriptions: Prescription[] = [];\n  prescriptionHistories: PrescriptionHistory[] = [];\n  patientAllergiesForm!: FormGroup;\n  appointment: AppointmentPostModel= new AppointmentPostModel();\n  prescription: PrescriptionPostModel = new PrescriptionPostModel();\n  prescriptionHistory: PrescriptionHistory = new PrescriptionHistory();\n\n  constructor(\n    private route: ActivatedRoute,\n    private patientService: ProfileFormService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.personId = params['id'];\n      this.loadData();\n    });\n  }\n\n  loadData() {\n      this.patientService.getPatientData(this.personId).subscribe((data) => {\n      this.person = data.person;\n      this.address = data.address;\n      this.emergencyContact = data.emergencyContact;\n      this.patient = data.patient;\n      this.commonAllergies = data.commonAllergies;\n      this.healthcareProviders = data.healthcareProviders;\n      this.appointments = data.appointments;\n      this.prescriptions = data.prescriptions;\n      this.buildForm();\n      this.appointment.patientId = this.patient.id;\n      this.prescription.patientId = this.patient.id;\n   });\n  }\n\n  buildForm() {\n    this.patientAllergiesForm = this.formBuilder.group({\n      commonAllergies: this.buildAllergyCheckboxes()\n    });\n\n    this.setInitialCheckboxValues();\n  }\n\n  buildAllergyCheckboxes() {\n    const checkboxes = this.commonAllergies.map(allergy => {\n      return this.formBuilder.control(false); \n    });\n\n    return this.formBuilder.array(checkboxes);\n  }\n\n  setInitialCheckboxValues() {\n    const allergyControls = this.patientAllergiesForm.get('commonAllergies') as FormArray;\n\n    this.patient.allergies.forEach(allergy => {\n      const index = this.commonAllergies.findIndex(a => a.id === allergy.id);\n      if (index !== -1) {\n        allergyControls.controls[index].setValue(true);\n      }\n    });\n    console.log('Allergy Controls:', allergyControls.value);\n  }\n\n  getCommonAllergiesControl(index: number): FormControl {\n    const commonAllergiesArray = this.patientAllergiesForm.get('commonAllergies') as FormArray;\n    return commonAllergiesArray.controls[index] as FormControl;\n  }\n\n  onSubmitAllergies() {\n    this.patient.allergies = this.patientAllergiesForm.value.commonAllergies\n      .map((checked: boolean, index: number) => checked ? this.commonAllergies[index] : null)\n      .filter((allergy: Allergy | null): allergy is Allergy => allergy !== null);\n    this.patientService.editPatient(this.patient)\n    .subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n\n  onSubmit(personalInfo: NgForm) {\n    if(personalInfo.valid){\n      this.patientService.editPerson(this.person? this.person: {} as Person)\n    .subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    this.patientService.editAddress(this.address? this.address: {} as Address)\n    .subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    this.patientService.editEmergencyContact(this.emergencyContact? this.emergencyContact: {} as EmergencyContact)\n    .subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    }    \n  }\n  onAppointmentSubmit(appointmentInfo: NgForm){\n   if(this.appointment.id == \"00000000-0000-0000-0000-000000000000\"){\n    this.insertAppointment(appointmentInfo);\n   }\n   else{\n    this.updateAppointment(appointmentInfo);\n   }\n  }\n  insertAppointment(appointmentInfo: NgForm){\n    this.patientService.postAppointment(this.appointment)\n    .subscribe({\n      next: res => {\n        this.appointments = res as Appointment[];\n        this.resetAppointmentForm(appointmentInfo);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  updateAppointment(appointmentInfo: NgForm){\n    this.patientService.editAppointment(this.appointment)\n    .subscribe({\n      next: res => {\n        this.appointments = res as Appointment[];\n        this.resetAppointmentForm(appointmentInfo);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  deleteAppointment(id: string){\n    this.patientService.deleteAppointment(id)\n    .subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  populateAppointmentForm(appointment: AppointmentPostModel){\n    this.appointment = Object.assign({}, appointment);\n  }\n  resetAppointmentForm(appointmentInfo: NgForm){\n    appointmentInfo.form.reset();\n    this.appointment = new AppointmentPostModel();\n  }\n\n  onPrescriptionSubmit(prescriptionInfo: NgForm){\n    if(this.prescription.id == \"00000000-0000-0000-0000-000000000000\"){\n      this.insertPrescription(prescriptionInfo);\n     }\n     else{\n      this.updatePrescription(prescriptionInfo);\n     }\n  }\n\n  insertPrescription(prescriptionInfo: NgForm){\n    this.patientService.postPrescription(this.prescription)\n    .subscribe({\n      next: res => {\n        this.prescriptions = res as Prescription[];\n        this.resetPrescriptionForm(prescriptionInfo);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n\n  updatePrescription(prescriptionInfo: NgForm){\n    this.patientService.editPrescription(this.prescription)\n    .subscribe({\n      next: res => {\n        this.prescriptions = res as Prescription[];\n        this.resetPrescriptionForm(prescriptionInfo);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n\n  deletePrescription(id: string){\n    this.patientService.deletePrescription(id)\n    .subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  populatePrescriptionForm(prescription: PrescriptionPostModel){\n    this.prescription = Object.assign({}, prescription);\n  }\n  resetPrescriptionForm(prescriptionInfo: NgForm){\n    prescriptionInfo.form.reset();\n    this.prescription = new PrescriptionPostModel();\n  }\n\n  onPrescriptionHistorySubmit(prescriptionHistoryInfo: NgForm){\n    if(this.prescriptionHistory.id == \"00000000-0000-0000-0000-000000000000\"){\n      this.insertPrescriptionHistory(prescriptionHistoryInfo);\n     }\n     else{\n      this.updatePrescriptionHistory(prescriptionHistoryInfo);\n     }\n  }\n\n  insertPrescriptionHistory(prescriptionHistoryInfo: NgForm){\n    this.patientService.postPrescriptionHistory(this.prescriptionHistory)\n    .subscribe({\n      next: res => {\n        this.prescriptionHistories = res as PrescriptionHistory[];\n        this.resetPrescriptionHistoryForm(prescriptionHistoryInfo);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n\n  updatePrescriptionHistory(prescriptionHistoryInfo: NgForm){\n    this.patientService.editPrescriptionHistory(this.prescriptionHistory)\n    .subscribe({\n      next: res => {\n        this.prescriptionHistories = res as PrescriptionHistory[];\n        this.resetPrescriptionHistoryForm(prescriptionHistoryInfo);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n\n  deletePrescriptionHistory(id: string){\n    this.patientService.deletePrescriptionHistory(id)\n    .subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  populatePrescriptionHistoryForm(prescriptionHistory: PrescriptionHistory){\n    this.prescriptionHistory = Object.assign({}, prescriptionHistory);\n  }\n  resetPrescriptionHistoryForm(prescriptionHistoryInfo: NgForm){\n    prescriptionHistoryInfo.form.reset();\n    this.prescriptionHistory = new PrescriptionHistory();\n  }\n  isPrescriptionIdEmpty(): boolean {\n    return this.prescription.id === \"00000000-0000-0000-0000-000000000000\";\n}\n\n}\n","<form #personalInfo = ngForm (submit)=\"onSubmit(personalInfo)\">\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <h2>Personal information</h2>\n      <label for=\"first-name\">First Name: </label>\n      <input id=\"first-name\" #firstName = \"ngModel\" type=\"text\" name=\"firstName\" \n      [(ngModel)] = \"person.firstName\">\n\n      <label for=\"last-name\">Last Name: </label>\n      <input id=\"last-name\" #lastName = \"ngModel\" type=\"text\" name=\"lastName\" \n      [(ngModel)] = \"person.lastName\">\n\n      <label for=\"date-of-birth\">Date of birth: </label>\n      <input id=\"date-of-birth\" #dateOfBirth = \"ngModel\" type=\"datetime\" name=\"dateOfBirth\" \n      [(ngModel)] = \"person.dateOfBirth\">\n\n      <label for=\"gender\">Gender: </label>\n      <input id=\"gender\" #gender = \"ngModel\" type=\"text\" name=\"gender\"\n      [(ngModel)] = \"person.gender\">\n\n      <label for=\"phone-number\">Phone number: </label>\n      <input id=\"phone-number\" #phoneNumber = \"ngModel\" type=\"text\" name=\"phoneNumber\"\n      [(ngModel)] = \"person.phoneNumber\">\n\n      <label for=\"email\">Email: </label>\n      <input id=\"email\" #email = \"ngModel\" type=\"email\" name=\"email\" \n      [(ngModel)] = \"person.email\">\n    </div>\n\n    <div class=\"col-md-4\">\n        <h2>Address</h2>\n\n        <label for=\"street\">Street: </label>\n        <input id=\"street\" #street = \"ngModel\" type=\"text\" name=\"street\" \n        [(ngModel)] = \"address.street\">\n\n        <label for=\"city\">City: </label>\n        <input id=\"city\" #city = \"ngModel\" type=\"text\" name=\"city\" \n        [(ngModel)] = \"address.city\">\n\n        <label for=\"country\">Country: </label>\n        <input id=\"country\" #country = \"ngModel\" type=\"text\" name=\"country\"\n        [(ngModel)] = \"address.country\">\n\n        <label for=\"zip-code\">Zip Code: </label>\n        <input id=\"zip-code\" #zipCode = \"ngModel\" type=\"text\" name=\"zipCode\" \n        [(ngModel)] = \"address.zipCode\">     \n    </div>\n\n    <div class=\"col-md-4\">\n      <h2>Emergency contact</h2>\n\n      <label for=\"name\">Name:</label>\n      <input id=\"name\" #name = \"ngModel\" type=\"text\" name=\"name\" \n      [(ngModel)] = \"emergencyContact.name\">\n\n      <label for=\"relationship\">Relationship: </label>\n      <input id=\"relationship\" #relationship = \"ngModel\" type=\"text\" name=\"relationship\" \n      [(ngModel)] = \"emergencyContact.relationship\">\n\n      <label for=\"phoneNumber\">Phone:</label>\n      <input id=\"phoneNumber\" #phoneNumber = \"ngModel\" type=\"text\" name=\"phoneNumber\" \n      [(ngModel)] = \"emergencyContact.phoneNumber\">\n    </div>\n  </div>\n    \n  <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n</form>\n<hr/>\n<div class=\"row\">  \n  <div class=\"col-md-3\">\n    <h2>Patient's allergies</h2>\n    <form [formGroup]=\"patientAllergiesForm\" (submit)=\"onSubmitAllergies()\">      \n      <div formArrayName=\"commonAllergies\">\n        <label *ngFor=\"let allergy of commonAllergies; let i = index\">\n          <input type=\"checkbox\" [formControl]=\"getCommonAllergiesControl(i)\">\n          {{ allergy.name }}\n        </label>\n      </div>\n\n      <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n    </form>\n  </div>\n  <div class=\"col-md-3\"> \n    <h2>New Appointment</h2>  \n    <form #appointmentInfo = ngForm (submit)=\"onAppointmentSubmit(appointmentInfo)\">      \n      <div>\n        <input type=\"hidden\" name=\"patientId\" [value] = \"appointment.patientId\">\n        <label for=\"startTime\">Start time: </label>\n        <input id=\"startTime\" #startTime = \"ngModel\" type=\"datetime-local\" name=\"startTime\" \n        [(ngModel)] = \"appointment.startTime\">\n\n        <label for=\"endTime\">End time: </label>\n        <input id=\"endTime\" #endTime = \"ngModel\" type=\"datetime-local\" name=\"endTime\" \n        [(ngModel)] = \"appointment.endTime\">\n\n        <label for=\"healthcareProvider\">Healthcare provider: </label>\n        <select id=\"healthcareProvider\" name=\"healthcareProviderId\" [(ngModel)]=\"appointment.healthcareProviderId\">\n            <option *ngFor=\"let provider of healthcareProviders\" [value]=\"provider.id\">\n                {{provider.person.firstName}}  {{provider.person.lastName}}\n            </option>\n        </select>\n\n        <label for=\"appointmentType\">Appointment Type: </label>\n        <input id=\"appointmentType\" #appointmentType = \"ngModel\" type=\"text\" name=\"appointmentType\"\n        [(ngModel)] = \"appointment.appointmentType\">\n      </div>\n      <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n    </form>\n  </div>\n  <div class=\"col-md-6\">\n    <h2>Appointments</h2>\n    <table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"appointments.length\">\n      <thead>\n        <tr>\n          <th></th>\n          <th>Start time</th>\n          <th>End time</th>\n          <th>HealthcareProvider</th>\n          <th>Type</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let appointment of appointments\">\n          <td (click)=\"populateAppointmentForm(appointment)\" style=\"color: blue;\">update</td>\n          <td>{{ appointment.startTime }}</td>\n          <td>{{ appointment.endTime }}</td>\n          <td>{{ appointment.healthcareProvider.person.firstName }} {{ appointment.healthcareProvider.person.lastName }}</td>\n          <td>{{ appointment.appointmentType }}</td>\n          <td (click)=\"deleteAppointment(appointment.id)\" style=\"color: red;\">delete</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n<hr/>\n<div class=\"row\">\n <div class=\"col-md-3\">\n  <h2>Prescription</h2>\n  <form #prescriptionInfo = ngForm (submit)=\"onPrescriptionSubmit(prescriptionInfo)\">\n    <div>\n        <input type=\"hidden\" name=\"patientId\" [value] = \"prescription.patientId\">\n        <label for=\"issueDate\">Issue date: </label>\n        <input id=\"issueDate\" #issueDate = \"ngModel\" type=\"date\" name=\"issueDate\" \n        [(ngModel)] = \"prescription.issueDate\">\n\n        <label for=\"medication\">Medication: </label>\n        <input id=\"medication\" #medication = \"ngModel\" type=\"text\" name=\"medication\" \n        [(ngModel)] = \"prescription.medication\">\n\n        <label for=\"healthcareProvider\">Healthcare provider: </label>\n        <select id=\"healthcareProvider\" name=\"healthcareProviderId\" [(ngModel)]=\"prescription.healthcareProviderId\">\n            <option *ngFor=\"let provider of healthcareProviders\" [value]=\"provider.id\">\n                {{provider.person.firstName}}  {{provider.person.lastName}}\n            </option>\n        </select>\n\n        <label for=\"dosage\">Dosage: </label>\n        <input id=\"dosage\" #dosage = \"ngModel\" type=\"text\" name=\"dosage\"\n        [(ngModel)] = \"prescription.dosage\">\n    </div>\n    <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n  </form>\n </div>\n <div class=\"col-md-3\">\n  <h2>History</h2>\n  <form #prescriptionHistoryInfo = ngForm (submit)=\"onPrescriptionHistorySubmit(prescriptionHistoryInfo)\">\n    <div>\n        <input type=\"hidden\" name=\"id\" [value] = \"prescriptionHistory.id\">\n        <input type=\"hidden\" name=\"prescriptionId\" [value] = \"prescriptionHistory.prescriptionId\">\n        <label for=\"dispenseDate\">Dispense date: </label>\n        <input id=\"dispenseDate\" #dispenseDate = \"ngModel\" type=\"date\" name=\"dispenseDate\" \n        [(ngModel)] = \"prescriptionHistory.dispenseDate\">\n\n        <label for=\"quantityDispensed\">Quantity dispensed: </label>\n        <input id=\"quantityDispensed\" #quantityDispensed = \"ngModel\" type=\"text\" name=\"quantityDispensed\" \n        [(ngModel)] = \"prescriptionHistory.quantityDispensed\">\n    </div>\n    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"isPrescriptionIdEmpty()\">Submit</button>\n  </form>\n </div>\n <div class=\"col-md-6\">\n  <h2>All prescriptions and history</h2>\n  <table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"prescriptions.length\">\n    <thead>\n      <tr>\n        <th></th>        \n        <th>Issue date</th>\n        <th>Healthcare Provider</th>\n        <th>Medication</th>\n        <th>Dosage</th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let prescription of prescriptions\">\n        <td (click)=\"populatePrescriptionForm(prescription)\" style=\"color: blue;\">update</td>\n        <td>{{ prescription.issueDate }}</td>\n        <td>{{ prescription.healthcareProvider.person.firstName }} {{ prescription.healthcareProvider.person.lastName }}</td>\n        <td>{{ prescription.medication }}</td>\n        <td>{{ prescription.dosage }}</td>\n        <td (click)=\"deletePrescription(prescription.id)\" style=\"color: red;\">delete</td>\n           <table *ngIf=\"prescription.prescriptionHistory.length\">\n            <thead>\n              <tr>\n                <th></th>        \n                <th>Dispense date</th>\n                <th>Quantity dispensed</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let history of prescription.prescriptionHistory\">\n                <td (click)=\"populatePrescriptionHistoryForm(history)\" style=\"color: blue;\">update</td>\n                <td>{{history.dispenseDate}}</td>\n                <td>{{history.quantityDispensed}}</td>\n                <td (click)=\"deletePrescriptionHistory(history.id)\" style=\"color: red;\">delete</td>\n              </tr>\n            </tbody>\n           </table>\n      </tr>\n    </tbody>\n  </table>\n </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}