{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProfileFormService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.url = \"\";\n    this.url = baseUrl + 'weatherforecast';\n  }\n  getAllRoles() {\n    return this.http.get(this.url + '/roles');\n  }\n  getAllPatients() {\n    return this.http.get(this.url + '/patients');\n  }\n  getAllHealthcareProviders() {\n    return this.http.get(this.url + '/healthcareProviders');\n  }\n  getPatientData(id) {\n    return this.http.get(this.url + '/patientUpdate/' + id);\n  }\n  postFormData(model) {\n    return this.http.post(this.url + '/registration', model);\n  }\n  postAppointment(model) {\n    return this.http.post(this.url + '/appointment', model);\n  }\n  postPrescription(model) {\n    return this.http.post(this.url + '/prescription', model);\n  }\n  editAppointment(model) {\n    return this.http.put(this.url + '/appointment', model);\n  }\n  editPrescription(model) {\n    return this.http.put(this.url + '/prescription', model);\n  }\n  editPerson(model) {\n    return this.http.put(this.url + '/person', model);\n  }\n  editAddress(model) {\n    return this.http.put(this.url + '/address', model);\n  }\n  editEmergencyContact(model) {\n    return this.http.put(this.url + '/emergencyContact', model);\n  }\n  editPatient(model) {\n    return this.http.put(this.url + '/patient', model);\n  }\n  deleteAppointment(id) {\n    return this.http.delete(this.url + '/appointment/' + id);\n  }\n  deletePrescription(id) {\n    return this.http.delete(this.url + '/prescription/' + id);\n  }\n}\nProfileFormService.ɵfac = function ProfileFormService_Factory(t) {\n  return new (t || ProfileFormService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nProfileFormService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProfileFormService,\n  factory: ProfileFormService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAgBA,OAAM,MAAOA,kBAAkB;EAI7BC,YAAoBC,IAAgB,EAAsBC,OAAe;IAArD,SAAI,GAAJD,IAAI;IAFxB,QAAG,GAAS,EAAE;IAGZ,IAAI,CAACE,GAAG,GAAGD,OAAO,GAAG,iBAAiB;EACxC;EAEAE,WAAW;IACV,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,IAAI,CAACF,GAAG,GAAG,QAAQ,CAAC;EACpD;EAEAG,cAAc;IACZ,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAW,IAAI,CAACF,GAAG,GAAG,WAAW,CAAC;EACvD;EAEDI,yBAAyB;IACvB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAW,IAAI,CAACF,GAAG,GAAG,sBAAsB,CAAC;EAClE;EAEAK,cAAc,CAACC,EAAU;IACxB,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAc,IAAI,CAACF,GAAG,GAAG,iBAAiB,GAAGM,EAAE,CAAC;EACrE;EAEDC,YAAY,CAACC,KAAuB;IACnC,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,IAAI,CAACT,GAAG,GAAG,eAAe,EAAEQ,KAAK,CAAC;EACzD;EAEAE,eAAe,CAACF,KAA2B;IACzC,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,IAAI,CAACT,GAAG,GAAG,cAAc,EAAEQ,KAAK,CAAC;EACzD;EAEAG,gBAAgB,CAACH,KAA4B;IAC3C,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,IAAI,CAACT,GAAG,GAAG,eAAe,EAAEQ,KAAK,CAAC;EAC1D;EAEAI,eAAe,CAACJ,KAA2B;IACzC,OAAO,IAAI,CAACV,IAAI,CAACe,GAAG,CAAC,IAAI,CAACb,GAAG,GAAG,cAAc,EAAEQ,KAAK,CAAC;EACxD;EAEAM,gBAAgB,CAACN,KAA4B;IAC3C,OAAO,IAAI,CAACV,IAAI,CAACe,GAAG,CAAC,IAAI,CAACb,GAAG,GAAG,eAAe,EAAEQ,KAAK,CAAC;EACzD;EAEAO,UAAU,CAACP,KAAa;IACtB,OAAO,IAAI,CAACV,IAAI,CAACe,GAAG,CAAC,IAAI,CAACb,GAAG,GAAG,SAAS,EAAEQ,KAAK,CAAC;EACnD;EAEAQ,WAAW,CAACR,KAAc;IACxB,OAAO,IAAI,CAACV,IAAI,CAACe,GAAG,CAAC,IAAI,CAACb,GAAG,GAAG,UAAU,EAAEQ,KAAK,CAAC;EACpD;EAEAS,oBAAoB,CAACT,KAAuB;IAC1C,OAAO,IAAI,CAACV,IAAI,CAACe,GAAG,CAAC,IAAI,CAACb,GAAG,GAAG,mBAAmB,EAAEQ,KAAK,CAAC;EAC7D;EAEAU,WAAW,CAACV,KAAc;IACxB,OAAO,IAAI,CAACV,IAAI,CAACe,GAAG,CAAC,IAAI,CAACb,GAAG,GAAG,UAAU,EAAEQ,KAAK,CAAC;EACpD;EAEAW,iBAAiB,CAACb,EAAU;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACsB,MAAM,CAAC,IAAI,CAACpB,GAAG,GAAG,eAAe,GAAEM,EAAE,CAAC;EACzD;EAEAe,kBAAkB,CAACf,EAAU;IAC3B,OAAO,IAAI,CAACR,IAAI,CAACsB,MAAM,CAAC,IAAI,CAACpB,GAAG,GAAG,gBAAgB,GAAEM,EAAE,CAAC;EAC1D;;AAlEWV,kBAAkB;mBAAlBA,kBAAkB,0CAIiB,UAAU;AAAA;AAJ7CA,kBAAkB;SAAlBA,kBAAkB;EAAA0B,SAAlB1B,kBAAkB;EAAA2B,YAFjB;AAAM","names":["ProfileFormService","constructor","http","baseUrl","url","getAllRoles","get","getAllPatients","getAllHealthcareProviders","getPatientData","id","postFormData","model","post","postAppointment","postPrescription","editAppointment","put","editPrescription","editPerson","editAddress","editEmergencyContact","editPatient","deleteAppointment","delete","deletePrescription","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Kateryna_Yavna\\source\\repos\\HealthHubPro\\HealthHubPro\\HealthHub2\\HealthHubPro\\ClientApp\\src\\app\\services\\profile-form.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ProfileFormModel } from '../models/ProfileFormModel.model';\nimport { Person } from '../models/Person.model';\nimport { Address } from '../models/Address.model';\nimport { PatientData } from '../models/PatientData.model';\nimport { EmergencyContact } from '../models/EmergencyContact.model';\nimport { Patient } from '../models/Patient.model';\nimport { AppointmentPostModel } from '../models/AppointmentPostModel.model';\nimport { PrescriptionPostModel } from '../models/PrescriptionPostModel.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileFormService {\n\n  url: string=\"\"\n\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) { \n    this.url = baseUrl + 'weatherforecast'\n  }\n\n  getAllRoles(): Observable<string[]> {\n   return this.http.get<string[]>(this.url + '/roles');\n  }\n\n  getAllPatients(): Observable<Person[]> {\n    return this.http.get<Person[]>(this.url + '/patients');\n   }\n\n  getAllHealthcareProviders(): Observable<Person[]> {\n    return this.http.get<Person[]>(this.url + '/healthcareProviders');\n   }\n\n   getPatientData(id: string): Observable<PatientData> {\n    return this.http.get<PatientData>(this.url + '/patientUpdate/' + id)\n   }\n\n  postFormData(model: ProfileFormModel): Observable<any>{\n   return this.http.post(this.url + '/registration', model)\n  }\n\n  postAppointment(model: AppointmentPostModel): Observable<any>{\n    return this.http.post(this.url + '/appointment', model)\n  }\n\n  postPrescription(model: PrescriptionPostModel): Observable<any>{\n    return this.http.post(this.url + '/prescription', model)\n  }\n\n  editAppointment(model: AppointmentPostModel): Observable<any>{\n    return this.http.put(this.url + '/appointment', model)\n  }\n\n  editPrescription(model: PrescriptionPostModel): Observable<any>{\n    return this.http.put(this.url + '/prescription', model)\n  }\n\n  editPerson(model: Person): Observable<any>{\n    return this.http.put(this.url + '/person', model)\n  }\n\n  editAddress(model: Address): Observable<any>{\n    return this.http.put(this.url + '/address', model)\n  }\n\n  editEmergencyContact(model: EmergencyContact): Observable<any>{\n    return this.http.put(this.url + '/emergencyContact', model)\n  }\n\n  editPatient(model: Patient): Observable<any>{\n    return this.http.put(this.url + '/patient', model)\n  }\n\n  deleteAppointment(id: string): Observable<any>{\n    return this.http.delete(this.url + '/appointment/'+ id)\n  }\n\n  deletePrescription(id: string): Observable<any>{\n    return this.http.delete(this.url + '/prescription/'+ id)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}