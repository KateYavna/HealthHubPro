{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProfileFormService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.url = \"\";\n    this.url = baseUrl + 'weatherforecast';\n  }\n  getAllRoles() {\n    return this.http.get(this.url + '/roles');\n  }\n  postFormData(model) {\n    return this.http.post(this.url + '/registration', model);\n  }\n}\nProfileFormService.ɵfac = function ProfileFormService_Factory(t) {\n  return new (t || ProfileFormService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nProfileFormService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProfileFormService,\n  factory: ProfileFormService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,kBAAkB;EAI7BC,YAAoBC,IAAgB,EAAsBC,OAAe;IAArD,SAAI,GAAJD,IAAI;IAFxB,QAAG,GAAS,EAAE;IAGZ,IAAI,CAACE,GAAG,GAAGD,OAAO,GAAG,iBAAiB;EACxC;EAEAE,WAAW;IACV,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,IAAI,CAACF,GAAG,GAAG,QAAQ,CAAC;EACpD;EAEAG,YAAY,CAACC,KAAuB;IACnC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACL,GAAG,GAAG,eAAe,EAAEI,KAAK,CAAC;EACzD;;AAdWR,kBAAkB;mBAAlBA,kBAAkB,0CAIiB,UAAU;AAAA;AAJ7CA,kBAAkB;SAAlBA,kBAAkB;EAAAU,SAAlBV,kBAAkB;EAAAW,YAFjB;AAAM","names":["ProfileFormService","constructor","http","baseUrl","url","getAllRoles","get","postFormData","model","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Kateryna_Yavna\\source\\repos\\HealthHubPro\\HealthHubPro\\HealthHub2\\HealthHubPro\\ClientApp\\src\\app\\services\\profile-form.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ProfileFormModel } from '../models/ProfileFormModel.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileFormService {\n\n  url: string=\"\"\n\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) { \n    this.url = baseUrl + 'weatherforecast'\n  }\n\n  getAllRoles(): Observable<string[]> {\n   return this.http.get<string[]>(this.url + '/roles');\n  }\n\n  postFormData(model: ProfileFormModel): Observable<any>{\n   return this.http.post(this.url + '/registration', model)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}