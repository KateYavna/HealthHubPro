{"ast":null,"code":"import { HealthcareProvider } from 'src/app/models/HealthcareProvider.model';\nimport { Person } from 'src/app/models/Person.model';\nimport { Address } from 'src/app/models/Address.model';\nimport { EmergencyContact } from 'src/app/models/EmergencyContact.model';\nimport { Specialty } from 'src/app/models/Specialty.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/profile-form.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction HealthcareProvidersUpdateComponent_label_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\");\n    i0.ɵɵelement(1, \"input\", 50);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const specialty_r18 = ctx.$implicit;\n    const i_r19 = ctx.index;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r14.getCommonSpecialtiesControl(i_r19));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", specialty_r18.name, \" \");\n  }\n}\nfunction HealthcareProvidersUpdateComponent_table_90_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const appointment_r21 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r21.startTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r21.endTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r21.appointmentType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", appointment_r21.patient.person.firstName, \" \", appointment_r21.patient.person.lastName, \"\");\n  }\n}\nfunction HealthcareProvidersUpdateComponent_table_90_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 51)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Start time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"End time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Patient\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, HealthcareProvidersUpdateComponent_table_90_tr_12_Template, 9, 5, \"tr\", 46);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r17.appointments);\n  }\n}\nexport class HealthcareProvidersUpdateComponent {\n  constructor(route, service, formBuilder) {\n    this.route = route;\n    this.service = service;\n    this.formBuilder = formBuilder;\n    this.personId = \"\";\n    this.person = new Person();\n    this.address = new Address();\n    this.emergencyContact = new EmergencyContact();\n    this.healthcareProvider = new HealthcareProvider();\n    this.commonSpecialties = [];\n    this.specialty = new Specialty();\n    this.appointments = [];\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.personId = params['id'];\n      this.loadData();\n    });\n  }\n  loadData() {\n    this.service.getHealthcareProviderData(this.personId).subscribe(data => {\n      this.person = data.person;\n      this.address = data.address;\n      this.emergencyContact = data.emergencyContact;\n      this.healthcareProvider = data.healthcareProvider;\n      this.commonSpecialties = data.commonSpecialties;\n      this.appointments = data.appointments;\n      this.buildForm();\n    });\n  }\n  buildForm() {\n    this.specialtiesForm = this.formBuilder.group({\n      commonSpecialties: this.buildSpecialtyCheckboxes()\n    });\n    this.setInitialCheckboxValues();\n  }\n  buildSpecialtyCheckboxes() {\n    const checkboxes = this.commonSpecialties.map(() => {\n      return this.formBuilder.control(false);\n    });\n    return this.formBuilder.array(checkboxes);\n  }\n  setInitialCheckboxValues() {\n    const specialtyControls = this.specialtiesForm.get('commonSpecialties');\n    this.healthcareProvider.specialties.forEach(specialty => {\n      const index = this.commonSpecialties.findIndex(s => s.id === specialty.id);\n      if (index !== -1) {\n        specialtyControls.controls[index].setValue(true);\n      }\n    });\n  }\n  getCommonSpecialtiesControl(index) {\n    const commonSpecialtiesArray = this.specialtiesForm.get('commonSpecialties');\n    return commonSpecialtiesArray.controls[index];\n  }\n  onSubmitSpecialties() {\n    this.healthcareProvider.specialties = this.specialtiesForm.value.commonSpecialties.map((checked, index) => checked ? this.commonSpecialties[index] : null).filter(specialty => specialty !== null);\n    this.service.editHealthcareProvider(this.healthcareProvider).subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  onSubmit(personalInfo) {\n    if (personalInfo.valid) {\n      this.service.editPerson(this.person ? this.person : {}).subscribe({\n        next: res => {\n          console.log(res);\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n      this.service.editAddress(this.address ? this.address : {}).subscribe({\n        next: res => {\n          console.log(res);\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n      this.service.editEmergencyContact(this.emergencyContact ? this.emergencyContact : {}).subscribe({\n        next: res => {\n          console.log(res);\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    }\n  }\n  onSpecialtySubmit(addSpecialty) {\n    this.service.postSpecialty(this.specialty).subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n}\nHealthcareProvidersUpdateComponent.ɵfac = function HealthcareProvidersUpdateComponent_Factory(t) {\n  return new (t || HealthcareProvidersUpdateComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProfileFormService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nHealthcareProvidersUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HealthcareProvidersUpdateComponent,\n  selectors: [[\"app-healthcare-providers-update\"]],\n  decls: 91,\n  vars: 17,\n  consts: [[3, \"submit\"], [\"personalInfo\", \"ngForm\"], [1, \"row\"], [1, \"col-md-4\"], [\"for\", \"first-name\"], [\"id\", \"first-name\", \"type\", \"text\", \"name\", \"firstName\", 3, \"ngModel\", \"ngModelChange\"], [\"firstName\", \"ngModel\"], [\"for\", \"last-name\"], [\"id\", \"last-name\", \"type\", \"text\", \"name\", \"lastName\", 3, \"ngModel\", \"ngModelChange\"], [\"lastName\", \"ngModel\"], [\"for\", \"date-of-birth\"], [\"id\", \"date-of-birth\", \"type\", \"datetime\", \"name\", \"dateOfBirth\", 3, \"ngModel\", \"ngModelChange\"], [\"dateOfBirth\", \"ngModel\"], [\"for\", \"gender\"], [\"id\", \"gender\", \"type\", \"text\", \"name\", \"gender\", 3, \"ngModel\", \"ngModelChange\"], [\"gender\", \"ngModel\"], [\"for\", \"phone-number\"], [\"id\", \"phone-number\", \"type\", \"text\", \"name\", \"phoneNumber\", 3, \"ngModel\", \"ngModelChange\"], [\"phoneNumber\", \"ngModel\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"name\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"for\", \"street\"], [\"id\", \"street\", \"type\", \"text\", \"name\", \"street\", 3, \"ngModel\", \"ngModelChange\"], [\"street\", \"ngModel\"], [\"for\", \"city\"], [\"id\", \"city\", \"type\", \"text\", \"name\", \"city\", 3, \"ngModel\", \"ngModelChange\"], [\"city\", \"ngModel\"], [\"for\", \"country\"], [\"id\", \"country\", \"type\", \"text\", \"name\", \"country\", 3, \"ngModel\", \"ngModelChange\"], [\"country\", \"ngModel\"], [\"for\", \"zip-code\"], [\"id\", \"zip-code\", \"type\", \"text\", \"name\", \"zipCode\", 3, \"ngModel\", \"ngModelChange\"], [\"zipCode\", \"ngModel\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"name\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [\"for\", \"relationship\"], [\"id\", \"relationship\", \"type\", \"text\", \"name\", \"relationship\", 3, \"ngModel\", \"ngModelChange\"], [\"relationship\", \"ngModel\"], [\"for\", \"phoneNumber\"], [\"id\", \"phoneNumber\", \"type\", \"text\", \"name\", \"phoneNumber\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"col-md-3\"], [3, \"formGroup\", \"submit\"], [\"formArrayName\", \"commonSpecialties\"], [4, \"ngFor\", \"ngForOf\"], [\"addSpecialty\", \"ngForm\"], [1, \"col-md-6\"], [\"class\", \"table table-striped\", 4, \"ngIf\"], [\"type\", \"checkbox\", 3, \"formControl\"], [1, \"table\", \"table-striped\"]],\n  template: function HealthcareProvidersUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r22 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function HealthcareProvidersUpdateComponent_Template_form_submit_0_listener() {\n        i0.ɵɵrestoreView(_r22);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\");\n      i0.ɵɵtext(5, \"Personal information\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"label\", 4);\n      i0.ɵɵtext(7, \"First Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5, 6);\n      i0.ɵɵlistener(\"ngModelChange\", function HealthcareProvidersUpdateComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.person.firstName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Last Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function HealthcareProvidersUpdateComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.person.lastName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"label\", 10);\n      i0.ɵɵtext(15, \"Date of birth: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 11, 12);\n      i0.ɵɵlistener(\"ngModelChange\", function HealthcareProvidersUpdateComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.person.dateOfBirth = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"label\", 13);\n      i0.ɵɵtext(19, \"Gender: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function HealthcareProvidersUpdateComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.person.gender = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"label\", 16);\n      i0.ɵɵtext(23, \"Phone number: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"input\", 17, 18);\n      i0.ɵɵlistener(\"ngModelChange\", function HealthcareProvidersUpdateComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.person.phoneNumber = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"label\", 19);\n      i0.ɵɵtext(27, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"input\", 20, 21);\n      i0.ɵɵlistener(\"ngModelChange\", function HealthcareProvidersUpdateComponent_Template_input_ngModelChange_28_listener($event) {\n        return ctx.person.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\", 3)(31, \"h2\");\n      i0.ɵɵtext(32, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"label\", 22);\n      i0.ɵɵtext(34, \"Street: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"input\", 23, 24);\n      i0.ɵɵlistener(\"ngModelChange\", function HealthcareProvidersUpdateComponent_Template_input_ngModelChange_35_listener($event) {\n        return ctx.address.street = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"label\", 25);\n      i0.ɵɵtext(38, \"City: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"input\", 26, 27);\n      i0.ɵɵlistener(\"ngModelChange\", function HealthcareProvidersUpdateComponent_Template_input_ngModelChange_39_listener($event) {\n        return ctx.address.city = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"label\", 28);\n      i0.ɵɵtext(42, \"Country: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"input\", 29, 30);\n      i0.ɵɵlistener(\"ngModelChange\", function HealthcareProvidersUpdateComponent_Template_input_ngModelChange_43_listener($event) {\n        return ctx.address.country = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"label\", 31);\n      i0.ɵɵtext(46, \"Zip Code: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"input\", 32, 33);\n      i0.ɵɵlistener(\"ngModelChange\", function HealthcareProvidersUpdateComponent_Template_input_ngModelChange_47_listener($event) {\n        return ctx.address.zipCode = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(49, \"div\", 3)(50, \"h2\");\n      i0.ɵɵtext(51, \"Emergency contact\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"label\", 34);\n      i0.ɵɵtext(53, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"input\", 35, 36);\n      i0.ɵɵlistener(\"ngModelChange\", function HealthcareProvidersUpdateComponent_Template_input_ngModelChange_54_listener($event) {\n        return ctx.emergencyContact.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"label\", 37);\n      i0.ɵɵtext(57, \"Relationship: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"input\", 38, 39);\n      i0.ɵɵlistener(\"ngModelChange\", function HealthcareProvidersUpdateComponent_Template_input_ngModelChange_58_listener($event) {\n        return ctx.emergencyContact.relationship = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"label\", 40);\n      i0.ɵɵtext(61, \"Phone:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(62, \"input\", 41, 18);\n      i0.ɵɵlistener(\"ngModelChange\", function HealthcareProvidersUpdateComponent_Template_input_ngModelChange_62_listener($event) {\n        return ctx.emergencyContact.phoneNumber = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(64, \"button\", 42);\n      i0.ɵɵtext(65, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(66, \"hr\");\n      i0.ɵɵelementStart(67, \"div\", 2)(68, \"div\", 43)(69, \"h2\");\n      i0.ɵɵtext(70, \"HealthcareProvider's Specialties\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(71, \"form\", 44);\n      i0.ɵɵlistener(\"submit\", function HealthcareProvidersUpdateComponent_Template_form_submit_71_listener() {\n        return ctx.onSubmitSpecialties();\n      });\n      i0.ɵɵelementStart(72, \"div\", 45);\n      i0.ɵɵtemplate(73, HealthcareProvidersUpdateComponent_label_73_Template, 3, 2, \"label\", 46);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(74, \"button\", 42);\n      i0.ɵɵtext(75, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(76, \"div\", 43)(77, \"h2\");\n      i0.ɵɵtext(78, \"Add new Specialty\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(79, \"form\", 0, 47);\n      i0.ɵɵlistener(\"submit\", function HealthcareProvidersUpdateComponent_Template_form_submit_79_listener() {\n        i0.ɵɵrestoreView(_r22);\n        const _r15 = i0.ɵɵreference(80);\n        return i0.ɵɵresetView(ctx.onSpecialtySubmit(_r15));\n      });\n      i0.ɵɵelementStart(81, \"label\", 34);\n      i0.ɵɵtext(82, \"Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(83, \"input\", 35, 36);\n      i0.ɵɵlistener(\"ngModelChange\", function HealthcareProvidersUpdateComponent_Template_input_ngModelChange_83_listener($event) {\n        return ctx.specialty.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(85, \"button\", 42);\n      i0.ɵɵtext(86, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(87, \"div\", 48)(88, \"h2\");\n      i0.ɵɵtext(89, \"Appointments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(90, HealthcareProvidersUpdateComponent_table_90_Template, 13, 1, \"table\", 49);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.firstName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.lastName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.dateOfBirth);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.gender);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.phoneNumber);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.email);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.address.street);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.address.city);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.address.country);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.address.zipCode);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.emergencyContact.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.emergencyContact.relationship);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.emergencyContact.phoneNumber);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.specialtiesForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.commonSpecialties);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.specialty.name);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.appointments.length);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i3.FormControlDirective, i3.FormGroupDirective, i3.FormArrayName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAASA,kBAAkB,QAAQ,yCAAyC;AAE5E,SAASC,MAAM,QAAQ,6BAA6B;AACpD,SAASC,OAAO,QAAQ,8BAA8B;AACtD,SAASC,gBAAgB,QAAQ,uCAAuC;AAGxE,SAASC,SAAS,QAAQ,gCAAgC;;;;;;;;ICiE9CC,6BAAkE;IAChEA,4BAAsE;IACtEA,YACF;IAAAA,iBAAQ;;;;;;IAFiBA,eAA8C;IAA9CA,wEAA8C;IACrEA,eACF;IADEA,mDACF;;;;;IA2BFA,0BAA6C;IACvCA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAAyB;IAAAA,iBAAK;IAClCA,0BAAI;IAAAA,YAAiC;IAAAA,iBAAK;IAC1CA,0BAAI;IAAAA,YAAoF;IAAAA,iBAAK;;;;IAHzFA,eAA2B;IAA3BA,+CAA2B;IAC3BA,eAAyB;IAAzBA,6CAAyB;IACzBA,eAAiC;IAAjCA,qDAAiC;IACjCA,eAAoF;IAApFA,qHAAoF;;;;;IAd9FA,iCAA+D;IAGrDA,0BAAU;IAAAA,iBAAK;IACnBA,0BAAI;IAAAA,wBAAQ;IAAAA,iBAAK;IACjBA,0BAAI;IAAAA,oBAAI;IAAAA,iBAAK;IACbA,0BAAI;IAAAA,wBAAO;IAAAA,iBAAK;IAGpBA,8BAAO;IACLA,6FAKK;IACPA,iBAAQ;;;;IANsBA,gBAAe;IAAfA,8CAAe;;;ADzFrD,OAAM,MAAOC,kCAAkC;EAY7CC,YACUC,KAAqB,EACrBC,OAA2B,EAC3BC,WAAwB;IAFxB,UAAK,GAALF,KAAK;IACL,YAAO,GAAPC,OAAO;IACP,gBAAW,GAAXC,WAAW;IAbrB,aAAQ,GAAW,EAAE;IACrB,WAAM,GAAW,IAAIT,MAAM,EAAE;IAC7B,YAAO,GAAY,IAAIC,OAAO,EAAE;IAChC,qBAAgB,GAAqB,IAAIC,gBAAgB,EAAE;IAC3D,uBAAkB,GAAuB,IAAIH,kBAAkB,EAAE;IACjE,sBAAiB,GAAgB,EAAE;IACnC,cAAS,GAAc,IAAII,SAAS,EAAE;IACtC,iBAAY,GAAkB,EAAE;EAO7B;EACHO,QAAQ;IACN,IAAI,CAACH,KAAK,CAACI,MAAM,CAACC,SAAS,CAAED,MAAM,IAAI;MACrC,IAAI,CAACE,QAAQ,GAAGF,MAAM,CAAC,IAAI,CAAC;MAC5B,IAAI,CAACG,QAAQ,EAAE;IACjB,CAAC,CAAC;EACJ;EACAA,QAAQ;IACN,IAAI,CAACN,OAAO,CAACO,yBAAyB,CAAC,IAAI,CAACF,QAAQ,CAAC,CAACD,SAAS,CAAEI,IAAI,IAAI;MACvE,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACC,MAAM;MACzB,IAAI,CAACC,OAAO,GAAGF,IAAI,CAACE,OAAO;MAC3B,IAAI,CAACC,gBAAgB,GAAGH,IAAI,CAACG,gBAAgB;MAC7C,IAAI,CAACC,kBAAkB,GAAGJ,IAAI,CAACI,kBAAkB;MACjD,IAAI,CAACC,iBAAiB,GAAGL,IAAI,CAACK,iBAAiB;MAC/C,IAAI,CAACC,YAAY,GAAGN,IAAI,CAACM,YAAY;MACrC,IAAI,CAACC,SAAS,EAAE;IAClB,CAAC,CAAC;EACJ;EACAA,SAAS;IACP,IAAI,CAACC,eAAe,GAAG,IAAI,CAACf,WAAW,CAACgB,KAAK,CAAC;MAC5CJ,iBAAiB,EAAE,IAAI,CAACK,wBAAwB;KACjD,CAAC;IACF,IAAI,CAACC,wBAAwB,EAAE;EACjC;EAEAD,wBAAwB;IACtB,MAAME,UAAU,GAAG,IAAI,CAACP,iBAAiB,CAACQ,GAAG,CAAC,MAAK;MACjD,OAAO,IAAI,CAACpB,WAAW,CAACqB,OAAO,CAAC,KAAK,CAAC;IACxC,CAAC,CAAC;IAEF,OAAO,IAAI,CAACrB,WAAW,CAACsB,KAAK,CAACH,UAAU,CAAC;EAC3C;EAEAD,wBAAwB;IACtB,MAAMK,iBAAiB,GAAG,IAAI,CAACR,eAAe,CAACS,GAAG,CAAC,mBAAmB,CAAc;IAEpF,IAAI,CAACb,kBAAkB,CAACc,WAAW,CAACC,OAAO,CAACC,SAAS,IAAG;MACtD,MAAMC,KAAK,GAAG,IAAI,CAAChB,iBAAiB,CAACiB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,SAAS,CAACI,EAAE,CAAC;MAC1E,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBL,iBAAiB,CAACS,QAAQ,CAACJ,KAAK,CAAC,CAACK,QAAQ,CAAC,IAAI,CAAC;;IAEpD,CAAC,CAAC;EACJ;EAEAC,2BAA2B,CAACN,KAAa;IACvC,MAAMO,sBAAsB,GAAG,IAAI,CAACpB,eAAe,CAACS,GAAG,CAAC,mBAAmB,CAAc;IACzF,OAAOW,sBAAsB,CAACH,QAAQ,CAACJ,KAAK,CAAgB;EAC9D;EAGAQ,mBAAmB;IACjB,IAAI,CAACzB,kBAAkB,CAACc,WAAW,GAAG,IAAI,CAACV,eAAe,CAACsB,KAAK,CAACzB,iBAAiB,CACjFQ,GAAG,CAAC,CAACkB,OAAgB,EAAEV,KAAa,KAAKU,OAAO,GAAG,IAAI,CAAC1B,iBAAiB,CAACgB,KAAK,CAAC,GAAG,IAAI,CAAC,CACxFW,MAAM,CAAEZ,SAA2B,IAA6BA,SAAS,KAAK,IAAI,CAAC;IACpF,IAAI,CAAC5B,OAAO,CAACyC,sBAAsB,CAAC,IAAI,CAAC7B,kBAAkB,CAAC,CAC7DR,SAAS,CAAC;MACTsC,IAAI,EAAEC,GAAG,IAAG;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC;MACDG,KAAK,EAAEC,GAAG,IAAG;QACXH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAClB;KACD,CAAC;EACF;EAEAC,QAAQ,CAACC,YAAoB;IAC3B,IAAGA,YAAY,CAACC,KAAK,EAAC;MACpB,IAAI,CAAClD,OAAO,CAACmD,UAAU,CAAC,IAAI,CAAC1C,MAAM,GAAE,IAAI,CAACA,MAAM,GAAE,EAAY,CAAC,CAChEL,SAAS,CAAC;QACTsC,IAAI,EAAEC,GAAG,IAAG;UACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAClB,CAAC;QACDG,KAAK,EAAEC,GAAG,IAAG;UACXH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;QAClB;OACD,CAAC;MACF,IAAI,CAAC/C,OAAO,CAACoD,WAAW,CAAC,IAAI,CAAC1C,OAAO,GAAE,IAAI,CAACA,OAAO,GAAE,EAAa,CAAC,CAClEN,SAAS,CAAC;QACTsC,IAAI,EAAEC,GAAG,IAAG;UACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAClB,CAAC;QACDG,KAAK,EAAEC,GAAG,IAAG;UACXH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;QAClB;OACD,CAAC;MACF,IAAI,CAAC/C,OAAO,CAACqD,oBAAoB,CAAC,IAAI,CAAC1C,gBAAgB,GAAE,IAAI,CAACA,gBAAgB,GAAE,EAAsB,CAAC,CACtGP,SAAS,CAAC;QACTsC,IAAI,EAAEC,GAAG,IAAG;UACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAClB,CAAC;QACDG,KAAK,EAAEC,GAAG,IAAG;UACXH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;QAClB;OACD,CAAC;;EAEJ;EACAO,iBAAiB,CAACC,YAAoB;IACpC,IAAI,CAACvD,OAAO,CAACwD,aAAa,CAAC,IAAI,CAAC5B,SAAS,CAAC,CACzCxB,SAAS,CAAC;MACTsC,IAAI,EAAEC,GAAG,IAAG;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC;MACDG,KAAK,EAAEC,GAAG,IAAG;QACXH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;;AA1HWlD,kCAAkC;mBAAlCA,kCAAkC;AAAA;AAAlCA,kCAAkC;QAAlCA,kCAAkC;EAAA4D;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCf/CjE,kCAA+D;MAAlCA;QAAAA;QAAA;QAAA,OAAUA,gCAAsB;MAAA,EAAC;MAC1DA,8BAAiB;MAETA,oCAAoB;MAAAA,iBAAK;MAC7BA,gCAAwB;MAAAA,4BAAY;MAAAA,iBAAQ;MAC5CA,mCACiC;MAAjCA;QAAA;MAAA,EAAgC;MADhCA,iBACiC;MAEjCA,iCAAuB;MAAAA,4BAAW;MAAAA,iBAAQ;MAC1CA,oCACgC;MAAhCA;QAAA;MAAA,EAA+B;MAD/BA,iBACgC;MAEhCA,kCAA2B;MAAAA,gCAAe;MAAAA,iBAAQ;MAClDA,sCACmC;MAAnCA;QAAA;MAAA,EAAkC;MADlCA,iBACmC;MAEnCA,kCAAoB;MAAAA,yBAAQ;MAAAA,iBAAQ;MACpCA,sCAC8B;MAA9BA;QAAA;MAAA,EAA6B;MAD7BA,iBAC8B;MAE9BA,kCAA0B;MAAAA,+BAAc;MAAAA,iBAAQ;MAChDA,sCACmC;MAAnCA;QAAA;MAAA,EAAkC;MADlCA,iBACmC;MAEnCA,kCAAmB;MAAAA,wBAAO;MAAAA,iBAAQ;MAClCA,sCAC6B;MAA7BA;QAAA;MAAA,EAA4B;MAD5BA,iBAC6B;MAG/BA,+BAAsB;MACdA,wBAAO;MAAAA,iBAAK;MAEhBA,kCAAoB;MAAAA,yBAAQ;MAAAA,iBAAQ;MACpCA,sCAC+B;MAA/BA;QAAA;MAAA,EAA8B;MAD9BA,iBAC+B;MAE/BA,kCAAkB;MAAAA,uBAAM;MAAAA,iBAAQ;MAChCA,sCAC6B;MAA7BA;QAAA;MAAA,EAA4B;MAD5BA,iBAC6B;MAE7BA,kCAAqB;MAAAA,0BAAS;MAAAA,iBAAQ;MACtCA,sCACgC;MAAhCA;QAAA;MAAA,EAA+B;MAD/BA,iBACgC;MAEhCA,kCAAsB;MAAAA,2BAAU;MAAAA,iBAAQ;MACxCA,sCACgC;MAAhCA;QAAA;MAAA,EAA+B;MAD/BA,iBACgC;MAGpCA,+BAAsB;MAChBA,kCAAiB;MAAAA,iBAAK;MAE1BA,kCAAkB;MAAAA,sBAAK;MAAAA,iBAAQ;MAC/BA,sCACsC;MAAtCA;QAAA;MAAA,EAAqC;MADrCA,iBACsC;MAEtCA,kCAA0B;MAAAA,+BAAc;MAAAA,iBAAQ;MAChDA,sCAC8C;MAA9CA;QAAA;MAAA,EAA6C;MAD7CA,iBAC8C;MAE9CA,kCAAyB;MAAAA,uBAAM;MAAAA,iBAAQ;MACvCA,sCAC6C;MAA7CA;QAAA;MAAA,EAA4C;MAD5CA,iBAC6C;MAIjDA,mCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;MAEjEA,sBAAK;MACLA,+BAAiB;MAELA,iDAAgC;MAAAA,iBAAK;MACzCA,iCAAqE;MAAjCA;QAAA,OAAUkE,yBAAqB;MAAA,EAAC;MAClElE,gCAAuC;MACrCA,0FAGQ;MACVA,iBAAM;MAENA,mCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;MAGnEA,gCAAsB;MAChBA,kCAAiB;MAAAA,iBAAK;MAC1BA,oCAAwE;MAA3CA;QAAAA;QAAA;QAAA,OAAUA,0CAA+B;MAAA,EAAC;MACrEA,kCAAkB;MAAAA,uBAAM;MAAAA,iBAAQ;MAChCA,sCAC+B;MAA/BA;QAAA;MAAA,EAA8B;MAD9BA,iBAC+B;MAC/BA,mCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;MAGjEA,gCAAsB;MAChBA,6BAAY;MAAAA,iBAAK;MACrBA,2FAiBQ;MACVA,iBAAM;;;MA1GFA,eAAgC;MAAhCA,8CAAgC;MAIhCA,eAA+B;MAA/BA,6CAA+B;MAI/BA,eAAkC;MAAlCA,gDAAkC;MAIlCA,eAA6B;MAA7BA,2CAA6B;MAI7BA,eAAkC;MAAlCA,gDAAkC;MAIlCA,eAA4B;MAA5BA,0CAA4B;MAQ1BA,eAA8B;MAA9BA,4CAA8B;MAI9BA,eAA4B;MAA5BA,0CAA4B;MAI5BA,eAA+B;MAA/BA,6CAA+B;MAI/BA,eAA+B;MAA/BA,6CAA+B;MAQjCA,eAAqC;MAArCA,mDAAqC;MAIrCA,eAA6C;MAA7CA,2DAA6C;MAI7CA,eAA4C;MAA5CA,0DAA4C;MAUtCA,eAA6B;MAA7BA,+CAA6B;MAEFA,eAAsB;MAAtBA,+CAAsB;MAcvDA,gBAA8B;MAA9BA,4CAA8B;MAMIA,eAAyB;MAAzBA,8CAAyB","names":["HealthcareProvider","Person","Address","EmergencyContact","Specialty","i0","HealthcareProvidersUpdateComponent","constructor","route","service","formBuilder","ngOnInit","params","subscribe","personId","loadData","getHealthcareProviderData","data","person","address","emergencyContact","healthcareProvider","commonSpecialties","appointments","buildForm","specialtiesForm","group","buildSpecialtyCheckboxes","setInitialCheckboxValues","checkboxes","map","control","array","specialtyControls","get","specialties","forEach","specialty","index","findIndex","s","id","controls","setValue","getCommonSpecialtiesControl","commonSpecialtiesArray","onSubmitSpecialties","value","checked","filter","editHealthcareProvider","next","res","console","log","error","err","onSubmit","personalInfo","valid","editPerson","editAddress","editEmergencyContact","onSpecialtySubmit","addSpecialty","postSpecialty","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Kateryna_Yavna\\source\\repos\\HealthHubPro\\HealthHubPro\\HealthHub2\\HealthHubPro\\ClientApp\\src\\app\\healthcare-providers\\healthcare-providers-update\\healthcare-providers-update.component.ts","C:\\Users\\Kateryna_Yavna\\source\\repos\\HealthHubPro\\HealthHubPro\\HealthHub2\\HealthHubPro\\ClientApp\\src\\app\\healthcare-providers\\healthcare-providers-update\\healthcare-providers-update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, NgForm, FormControl } from '@angular/forms';\nimport { HealthcareProvider } from 'src/app/models/HealthcareProvider.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { Person } from 'src/app/models/Person.model';\nimport { Address } from 'src/app/models/Address.model';\nimport { EmergencyContact } from 'src/app/models/EmergencyContact.model';\nimport { ProfileFormService } from 'src/app/services/profile-form.service';\nimport { Appointment } from 'src/app/models/Appointment.model';\nimport { Specialty } from 'src/app/models/Specialty.model';\n\n@Component({\n  selector: 'app-healthcare-providers-update',\n  templateUrl: './healthcare-providers-update.component.html'\n})\nexport class HealthcareProvidersUpdateComponent implements OnInit {\n\n  personId: string = \"\";\n  person: Person = new Person();\n  address: Address = new Address();\n  emergencyContact: EmergencyContact = new EmergencyContact();\n  healthcareProvider: HealthcareProvider = new HealthcareProvider();\n  commonSpecialties: Specialty[] = [];\n  specialty: Specialty = new Specialty();\n  appointments: Appointment[] = [];\n  specialtiesForm!: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private service: ProfileFormService,\n    private formBuilder: FormBuilder\n  ) {}\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.personId = params['id'];\n      this.loadData();\n    });\n  }\n  loadData(){\n    this.service.getHealthcareProviderData(this.personId).subscribe((data) => {\n      this.person = data.person;\n      this.address = data.address;\n      this.emergencyContact = data.emergencyContact;\n      this.healthcareProvider = data.healthcareProvider;\n      this.commonSpecialties = data.commonSpecialties;\n      this.appointments = data.appointments;\n      this.buildForm();\n    });\n  }\n  buildForm() {\n    this.specialtiesForm = this.formBuilder.group({\n      commonSpecialties: this.buildSpecialtyCheckboxes()\n    });\n    this.setInitialCheckboxValues();\n  }\n\n  buildSpecialtyCheckboxes() {\n    const checkboxes = this.commonSpecialties.map(() => {\n      return this.formBuilder.control(false);\n    });\n  \n    return this.formBuilder.array(checkboxes);\n  }\n\n  setInitialCheckboxValues() {\n    const specialtyControls = this.specialtiesForm.get('commonSpecialties') as FormArray;\n\n    this.healthcareProvider.specialties.forEach(specialty => {\n      const index = this.commonSpecialties.findIndex(s => s.id === specialty.id);\n      if (index !== -1) {\n        specialtyControls.controls[index].setValue(true);\n      }\n    });\n  }\n\n  getCommonSpecialtiesControl(index: number): FormControl {\n    const commonSpecialtiesArray = this.specialtiesForm.get('commonSpecialties') as FormArray;\n    return commonSpecialtiesArray.controls[index] as FormControl;\n  }\n  \n\n  onSubmitSpecialties(){\n    this.healthcareProvider.specialties = this.specialtiesForm.value.commonSpecialties\n    .map((checked: boolean, index: number) => checked ? this.commonSpecialties[index] : null)\n    .filter((specialty: Specialty | null): specialty is Specialty => specialty !== null);\n    this.service.editHealthcareProvider(this.healthcareProvider)\n  .subscribe({\n    next: res => {\n      console.log(res);\n    },\n    error: err => {\n      console.log(err);\n    }\n  });\n  }\n\n  onSubmit(personalInfo: NgForm) {\n    if(personalInfo.valid){\n      this.service.editPerson(this.person? this.person: {} as Person)\n    .subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    this.service.editAddress(this.address? this.address: {} as Address)\n    .subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    this.service.editEmergencyContact(this.emergencyContact? this.emergencyContact: {} as EmergencyContact)\n    .subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    }    \n  }\n  onSpecialtySubmit(addSpecialty: NgForm){\n    this.service.postSpecialty(this.specialty)\n    .subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n}","<form #personalInfo = ngForm (submit)=\"onSubmit(personalInfo)\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <h2>Personal information</h2>\n        <label for=\"first-name\">First Name: </label>\n        <input id=\"first-name\" #firstName = \"ngModel\" type=\"text\" name=\"firstName\" \n        [(ngModel)] = \"person.firstName\">\n  \n        <label for=\"last-name\">Last Name: </label>\n        <input id=\"last-name\" #lastName = \"ngModel\" type=\"text\" name=\"lastName\" \n        [(ngModel)] = \"person.lastName\">\n  \n        <label for=\"date-of-birth\">Date of birth: </label>\n        <input id=\"date-of-birth\" #dateOfBirth = \"ngModel\" type=\"datetime\" name=\"dateOfBirth\" \n        [(ngModel)] = \"person.dateOfBirth\">\n  \n        <label for=\"gender\">Gender: </label>\n        <input id=\"gender\" #gender = \"ngModel\" type=\"text\" name=\"gender\"\n        [(ngModel)] = \"person.gender\">\n  \n        <label for=\"phone-number\">Phone number: </label>\n        <input id=\"phone-number\" #phoneNumber = \"ngModel\" type=\"text\" name=\"phoneNumber\"\n        [(ngModel)] = \"person.phoneNumber\">\n  \n        <label for=\"email\">Email: </label>\n        <input id=\"email\" #email = \"ngModel\" type=\"email\" name=\"email\" \n        [(ngModel)] = \"person.email\">\n      </div>\n  \n      <div class=\"col-md-4\">\n          <h2>Address</h2>\n  \n          <label for=\"street\">Street: </label>\n          <input id=\"street\" #street = \"ngModel\" type=\"text\" name=\"street\" \n          [(ngModel)] = \"address.street\">\n  \n          <label for=\"city\">City: </label>\n          <input id=\"city\" #city = \"ngModel\" type=\"text\" name=\"city\" \n          [(ngModel)] = \"address.city\">\n  \n          <label for=\"country\">Country: </label>\n          <input id=\"country\" #country = \"ngModel\" type=\"text\" name=\"country\"\n          [(ngModel)] = \"address.country\">\n  \n          <label for=\"zip-code\">Zip Code: </label>\n          <input id=\"zip-code\" #zipCode = \"ngModel\" type=\"text\" name=\"zipCode\" \n          [(ngModel)] = \"address.zipCode\">     \n      </div>\n  \n      <div class=\"col-md-4\">\n        <h2>Emergency contact</h2>\n  \n        <label for=\"name\">Name:</label>\n        <input id=\"name\" #name = \"ngModel\" type=\"text\" name=\"name\" \n        [(ngModel)] = \"emergencyContact.name\">\n  \n        <label for=\"relationship\">Relationship: </label>\n        <input id=\"relationship\" #relationship = \"ngModel\" type=\"text\" name=\"relationship\" \n        [(ngModel)] = \"emergencyContact.relationship\">\n  \n        <label for=\"phoneNumber\">Phone:</label>\n        <input id=\"phoneNumber\" #phoneNumber = \"ngModel\" type=\"text\" name=\"phoneNumber\" \n        [(ngModel)] = \"emergencyContact.phoneNumber\">\n      </div>\n    </div>\n      \n    <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n</form>\n<hr/>\n<div class=\"row\">\n   <div class=\"col-md-3\">\n        <h2>HealthcareProvider's Specialties</h2>\n        <form [formGroup]=\"specialtiesForm\" (submit)=\"onSubmitSpecialties()\">      \n          <div formArrayName=\"commonSpecialties\">\n            <label *ngFor=\"let specialty of commonSpecialties; let i = index\">\n              <input type=\"checkbox\" [formControl]=\"getCommonSpecialtiesControl(i)\">\n              {{ specialty.name }}\n            </label>\n          </div>\n     \n          <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n        </form>\n    </div>\n    <div class=\"col-md-3\">\n      <h2>Add new Specialty</h2>\n      <form #addSpecialty = ngForm (submit)=\"onSpecialtySubmit(addSpecialty)\">\n        <label for=\"name\">Name: </label>\n        <input id=\"name\" #name = \"ngModel\" type=\"text\" name=\"name\" \n        [(ngModel)] = \"specialty.name\">\n        <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n      </form>\n    </div>\n    <div class=\"col-md-6\">\n      <h2>Appointments</h2>\n      <table class='table table-striped' *ngIf=\"appointments.length\">\n        <thead>\n          <tr>\n            <th>Start time</th>\n            <th>End time</th>\n            <th>Type</th>\n            <th>Patient</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let appointment of appointments\">\n            <td>{{ appointment.startTime }}</td>\n            <td>{{ appointment.endTime }}</td>\n            <td>{{ appointment.appointmentType }}</td>\n            <td>{{ appointment.patient.person.firstName }} {{ appointment.patient.person.lastName }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}