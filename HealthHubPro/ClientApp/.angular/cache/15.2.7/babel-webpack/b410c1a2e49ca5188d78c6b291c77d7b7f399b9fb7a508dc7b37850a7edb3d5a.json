{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/profile-form.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction PatientUpdateComponent_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class PatientUpdateComponent {\n  constructor(route, patientService, toastrServise) {\n    this.route = route;\n    this.patientService = patientService;\n    this.toastrServise = toastrServise;\n    this.personId = \"\";\n    this.appointments = [];\n    this.prescriptions = [];\n    this.allergies = [];\n    this.commonAllergies = [];\n    this.healthcareProviders = [];\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.personId = params['id'];\n      this.loadData();\n    });\n  }\n  loadData() {\n    this.patientService.getPatientData(this.personId).subscribe(data => {\n      this.person = data.person;\n      this.address = data.address;\n      this.emergencyContact = data.emergencyContact;\n      this.appointments = data.appointments;\n      this.prescriptions = data.prescriptions;\n      this.allergies = data.allergies;\n      this.commonAllergies = data.commonAllergies;\n      this.healthcareProviders = data.healthcareProviders;\n    });\n  }\n  onSubmit(personalInfo) {\n    if (personalInfo.valid) {\n      this.patientService.editPerson(this.person ? this.person : {}).subscribe({\n        next: res => {\n          console.log(res);\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n      this.patientService.editAddress(this.address ? this.address : {}).subscribe({\n        next: res => {\n          console.log(res);\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n      this.patientService.editEmergencyContact(this.emergencyContact ? this.emergencyContact : {}).subscribe({\n        next: res => {\n          console.log(res);\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    }\n  }\n}\nPatientUpdateComponent.ɵfac = function PatientUpdateComponent_Factory(t) {\n  return new (t || PatientUpdateComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProfileFormService), i0.ɵɵdirectiveInject(i3.ToastrService));\n};\nPatientUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PatientUpdateComponent,\n  selectors: [[\"app-patient-update\"]],\n  decls: 67,\n  vars: 14,\n  consts: [[4, \"ngIf\"], [3, \"submit\"], [\"personalInfo\", \"ngForm\"], [1, \"row\"], [1, \"col-md-4\"], [\"for\", \"first-name\"], [\"id\", \"first-name\", \"type\", \"text\", \"name\", \"firstName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"firstName\", \"ngModel\"], [\"for\", \"last-name\"], [\"id\", \"last-name\", \"type\", \"text\", \"name\", \"lastName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"lastName\", \"ngModel\"], [\"for\", \"date-of-birth\"], [\"id\", \"date-of-birth\", \"type\", \"datetime\", \"name\", \"dateOfBirth\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"dateOfBirth\", \"ngModel\"], [\"for\", \"gender\"], [\"id\", \"gender\", \"type\", \"text\", \"name\", \"gender\", 3, \"ngModel\", \"ngModelChange\"], [\"gender\", \"ngModel\"], [\"for\", \"phone-number\"], [\"id\", \"phone-number\", \"type\", \"text\", \"name\", \"phoneNumber\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"phoneNumber\", \"ngModel\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"for\", \"street\"], [\"id\", \"street\", \"type\", \"text\", \"name\", \"street\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"street\", \"ngModel\"], [\"for\", \"city\"], [\"id\", \"city\", \"type\", \"text\", \"name\", \"city\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"city\", \"ngModel\"], [\"for\", \"country\"], [\"id\", \"country\", \"type\", \"text\", \"name\", \"country\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"country\", \"ngModel\"], [\"for\", \"zip-code\"], [\"id\", \"zip-code\", \"type\", \"text\", \"name\", \"zipCode\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"zipCode\", \"ngModel\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [\"for\", \"relationship\"], [\"id\", \"relationship\", \"type\", \"text\", \"name\", \"relationship\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"relationship\", \"ngModel\"], [\"for\", \"phoneNumber\"], [\"id\", \"phoneNumber\", \"type\", \"text\", \"name\", \"phoneNumber\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function PatientUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r15 = i0.ɵɵgetCurrentView();\n      i0.ɵɵtemplate(0, PatientUpdateComponent_p_0_Template, 3, 0, \"p\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"submit\", function PatientUpdateComponent_Template_form_submit_1_listener() {\n        i0.ɵɵrestoreView(_r15);\n        const _r1 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.onSubmit(_r1));\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\");\n      i0.ɵɵtext(6, \"Personal information\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 5);\n      i0.ɵɵtext(8, \"First Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.person.firstName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Last Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 9, 10);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.person.lastName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"label\", 11);\n      i0.ɵɵtext(16, \"Date of birth: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 12, 13);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.person.dateOfBirth = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"label\", 14);\n      i0.ɵɵtext(20, \"Gender: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 15, 16);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.person.gender = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"label\", 17);\n      i0.ɵɵtext(24, \"Phone number: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"input\", 18, 19);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.person.phoneNumber = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"label\", 20);\n      i0.ɵɵtext(28, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"input\", 21, 22);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_29_listener($event) {\n        return ctx.person.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 4)(32, \"h2\");\n      i0.ɵɵtext(33, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"label\", 23);\n      i0.ɵɵtext(35, \"Street: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"input\", 24, 25);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_36_listener($event) {\n        return ctx.address.street = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"label\", 26);\n      i0.ɵɵtext(39, \"City: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"input\", 27, 28);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_40_listener($event) {\n        return ctx.address.city = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"label\", 29);\n      i0.ɵɵtext(43, \"Country: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"input\", 30, 31);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_44_listener($event) {\n        return ctx.address.country = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"label\", 32);\n      i0.ɵɵtext(47, \"Zip Code: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"input\", 33, 34);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_48_listener($event) {\n        return ctx.address.zipCode = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(50, \"div\", 4)(51, \"h2\");\n      i0.ɵɵtext(52, \"Emergency contact\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"label\", 35);\n      i0.ɵɵtext(54, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"input\", 36, 37);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_55_listener($event) {\n        return ctx.emergencyContact.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(57, \"label\", 38);\n      i0.ɵɵtext(58, \"Relationship: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"input\", 39, 40);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_59_listener($event) {\n        return ctx.emergencyContact.relationship = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"label\", 41);\n      i0.ɵɵtext(62, \"Phone:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"input\", 42, 19);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientUpdateComponent_Template_input_ngModelChange_63_listener($event) {\n        return ctx.emergencyContact.phoneNumber = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(65, \"button\", 43);\n      i0.ɵɵtext(66, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.person);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.firstName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.lastName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.dateOfBirth);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.gender);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.phoneNumber);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.email);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.address.street);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.address.city);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.address.country);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.address.zipCode);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.emergencyContact.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.emergencyContact.relationship);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.emergencyContact.phoneNumber);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n  styles: [\"form[_ngcontent-%COMP%] {\\r\\n    padding-top: 1rem;\\r\\n  }\\r\\n  \\r\\nlabel[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin: .5em 0;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  margin: 1rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGF0aWVudC11cGRhdGUvcGF0aWVudC11cGRhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtFQUNuQjs7QUFFRjtJQUNJLGNBQWM7SUFDZCxjQUFjO0lBQ2QsaUJBQWlCO0VBQ25COztBQUVGO0VBQ0UsWUFBWTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XHJcbiAgICBwYWRkaW5nLXRvcDogMXJlbTtcclxuICB9XHJcbiAgXHJcbmxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luOiAuNWVtIDA7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcblxyXG5idXR0b24ge1xyXG4gIG1hcmdpbjogMXJlbTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","PatientUpdateComponent","constructor","route","patientService","toastrServise","ngOnInit","params","subscribe","personId","loadData","getPatientData","data","person","address","emergencyContact","appointments","prescriptions","allergies","commonAllergies","healthcareProviders","onSubmit","personalInfo","valid","editPerson","next","res","console","log","error","err","editAddress","editEmergencyContact","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Kateryna_Yavna\\source\\repos\\HealthHubPro\\HealthHubPro\\HealthHub2\\HealthHubPro\\ClientApp\\src\\app\\patient-update\\patient-update.component.html","C:\\Users\\Kateryna_Yavna\\source\\repos\\HealthHubPro\\HealthHubPro\\HealthHub2\\HealthHubPro\\ClientApp\\src\\app\\patient-update\\patient-update.component.ts"],"sourcesContent":["<p *ngIf=\"!person\"><em>Loading...</em></p>\n<form #personalInfo = ngForm (submit)=\"onSubmit(personalInfo)\">\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <h2>Personal information</h2>\n      <label for=\"first-name\">First Name: </label>\n      <input id=\"first-name\" #firstName = \"ngModel\" type=\"text\" name=\"firstName\" \n      [(ngModel)] = \"person.firstName\" required>\n\n      <label for=\"last-name\">Last Name: </label>\n      <input id=\"last-name\" #lastName = \"ngModel\" type=\"text\" name=\"lastName\" \n      [(ngModel)] = \"person.lastName\" required>\n\n      <label for=\"date-of-birth\">Date of birth: </label>\n      <input id=\"date-of-birth\" #dateOfBirth = \"ngModel\" type=\"datetime\" name=\"dateOfBirth\" \n      [(ngModel)] = \"person.dateOfBirth\" required>\n\n      <label for=\"gender\">Gender: </label>\n      <input id=\"gender\" #gender = \"ngModel\" type=\"text\" name=\"gender\"\n      [(ngModel)] = \"person.gender\">\n\n      <label for=\"phone-number\">Phone number: </label>\n      <input id=\"phone-number\" #phoneNumber = \"ngModel\" type=\"text\" name=\"phoneNumber\"\n      [(ngModel)] = \"person.phoneNumber\" required>\n\n      <label for=\"email\">Email: </label>\n      <input id=\"email\" #email = \"ngModel\" type=\"email\" name=\"email\" \n      [(ngModel)] = \"person.email\" required>\n    </div>\n\n    <div class=\"col-md-4\">\n        <h2>Address</h2>\n\n        <label for=\"street\">Street: </label>\n        <input id=\"street\" #street = \"ngModel\" type=\"text\" name=\"street\" \n        [(ngModel)] = \"address.street\" required>\n\n        <label for=\"city\">City: </label>\n        <input id=\"city\" #city = \"ngModel\" type=\"text\" name=\"city\" \n        [(ngModel)] = \"address.city\" required>\n\n        <label for=\"country\">Country: </label>\n        <input id=\"country\" #country = \"ngModel\" type=\"text\" name=\"country\"\n        [(ngModel)] = \"address.country\" required>\n\n        <label for=\"zip-code\">Zip Code: </label>\n        <input id=\"zip-code\" #zipCode = \"ngModel\" type=\"text\" name=\"zipCode\" \n        [(ngModel)] = \"address.zipCode\" required>     \n    </div>\n\n    <div class=\"col-md-4\">\n      <h2>Emergency contact</h2>\n\n      <label for=\"name\">Name:</label>\n      <input id=\"name\" #name = \"ngModel\" type=\"text\" name=\"name\" \n      [(ngModel)] = \"emergencyContact.name\" required>\n\n      <label for=\"relationship\">Relationship: </label>\n      <input id=\"relationship\" #relationship = \"ngModel\" type=\"text\" name=\"relationship\" \n      [(ngModel)] = \"emergencyContact.relationship\" required>\n\n      <label for=\"phoneNumber\">Phone:</label>\n      <input id=\"phoneNumber\" #phoneNumber = \"ngModel\" type=\"text\" name=\"phoneNumber\" \n      [(ngModel)] = \"emergencyContact.phoneNumber\" required>\n    </div>\n  </div>\n    \n  <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Allergy } from '../models/Allergy.model';\nimport { HealthcareProvider } from '../models/HealthcareProvider.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { Person } from '../models/Person.model';\nimport { Address } from '../models/Address.model';\nimport { EmergencyContact } from '../models/EmergencyContact.model';\nimport { Appointment } from '../models/Appointment.model';\nimport { Prescription } from '../models/Prescription.model';\nimport { ProfileFormService } from '../services/profile-form.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-patient-update',\n  templateUrl: './patient-update.component.html',\n  styleUrls: ['./patient-update.component.css']\n})\nexport class PatientUpdateComponent implements OnInit {\n\n  personId: string = \"\";\n  person!: Person;\n  address!: Address;\n  emergencyContact!: EmergencyContact;\n  appointments: Appointment[] = [];\n  prescriptions: Prescription[] = [];\n  allergies: Allergy[] = [];\n  commonAllergies: Allergy[] = [];\n  healthcareProviders: HealthcareProvider[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private patientService: ProfileFormService,\n    private toastrServise: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.personId = params['id'];\n      this.loadData();\n    });\n  }\n\n  loadData() {\n      this.patientService.getPatientData(this.personId).subscribe((data) => {\n      this.person = data.person;\n      this.address = data.address;\n      this.emergencyContact = data.emergencyContact;\n      this.appointments = data.appointments;\n      this.prescriptions = data.prescriptions;\n      this.allergies = data.allergies;\n      this.commonAllergies = data.commonAllergies;\n      this.healthcareProviders = data.healthcareProviders;\n   });\n  }\n\n  onSubmit(personalInfo: NgForm) {\n    if(personalInfo.valid){\n      this.patientService.editPerson(this.person? this.person: {} as Person)\n    .subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    this.patientService.editAddress(this.address? this.address: {} as Address)\n    .subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    this.patientService.editEmergencyContact(this.emergencyContact? this.emergencyContact: {} as EmergencyContact)\n    .subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    }    \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}