{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/profile-form.service\";\nimport * as i3 from \"@angular/forms\";\nexport class PatientUpdateComponent {\n  constructor(route, patientService) {\n    this.route = route;\n    this.patientService = patientService;\n    this.personId = \"\";\n    this.appointments = [];\n    this.prescriptions = [];\n    this.allergies = [];\n    this.healthcareProviders = [];\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.personId = params['id'];\n      this.loadData();\n    });\n  }\n  loadData() {\n    this.patientService.getPatientData(this.personId).subscribe(data => {\n      this.person = data.person;\n      this.address = data.address;\n      this.emergencyContact = data.emergencyContact;\n      this.appointments = data.appointments;\n      this.prescriptions = data.prescriptions;\n      this.allergies = data.allergies;\n      this.healthcareProviders = data.healthcareProviders;\n    });\n  }\n  onSubmit(personalInfo) {}\n}\nPatientUpdateComponent.ɵfac = function PatientUpdateComponent_Factory(t) {\n  return new (t || PatientUpdateComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProfileFormService));\n};\nPatientUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PatientUpdateComponent,\n  selectors: [[\"app-patient-update\"]],\n  decls: 67,\n  vars: 1,\n  consts: [[3, \"submit\"], [\"personalInfo\", \"ngForm\"], [1, \"row\"], [1, \"col-md-4\"], [\"for\", \"first-name\"], [\"id\", \"first-name\", \"type\", \"text\", \"name\", \"firstName\", \"required\", \"\", 3, \"ngModel\"], [\"firstName\", \"ngModel\"], [\"for\", \"last-name\"], [\"id\", \"last-name\", \"type\", \"text\", \"name\", \"lastName\", \"\", \"person?.lastName\", \"required\", \"\"], [\"lastName\", \"ngModel\"], [\"for\", \"date-of-birth\"], [\"id\", \"date-of-birth\", \"type\", \"datetime\", \"name\", \"dateOfBirth\", \"\", \"person?.dateOfBirth\", \"required\", \"\"], [\"dateOfBirth\", \"ngModel\"], [\"for\", \"gender\"], [\"id\", \"gender\", \"type\", \"text\", \"name\", \"gender\", \"\", \"person?.gender\"], [\"gender\", \"ngModel\"], [\"for\", \"phone-number\"], [\"id\", \"phone-number\", \"type\", \"text\", \"name\", \"phoneNumber\", \"\", \"person?.phoneNumber\", \"required\", \"\"], [\"phoneNumber\", \"ngModel\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"name\", \"email\", \"\", \"person?.email\", \"required\", \"\"], [\"email\", \"ngModel\"], [\"for\", \"street\"], [\"id\", \"street\", \"type\", \"text\", \"name\", \"street\", \"\", \"addressr?.street\", \"required\", \"\"], [\"street\", \"ngModel\"], [\"for\", \"city\"], [\"id\", \"city\", \"type\", \"text\", \"name\", \"city\", \"\", \"address?.city\", \"required\", \"\"], [\"city\", \"ngModel\"], [\"for\", \"country\"], [\"id\", \"country\", \"type\", \"text\", \"name\", \"country\", \"\", \"address?.country\", \"required\", \"\"], [\"country\", \"ngModel\"], [\"for\", \"zip-code\"], [\"id\", \"zip-code\", \"type\", \"text\", \"name\", \"zipCode\", \"\", \"address?.zipCode\", \"required\", \"\"], [\"zipCode\", \"ngModel\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"name\", \"name\", \"\", \"emergencyContact?.name\", \"required\", \"\"], [\"name\", \"ngModel\"], [\"for\", \"relationship\"], [\"id\", \"relationship\", \"type\", \"text\", \"name\", \"relationship\", \"\", \"emergencyContact?.relationship\", \"required\", \"\"], [\"relationship\", \"ngModel\"], [\"for\", \"phoneNumber\"], [\"id\", \"phoneNumber\", \"type\", \"text\", \"name\", \"phoneNumber\", \"\", \"emergencyContact?.phoneNumber\", \"required\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function PatientUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r14 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function PatientUpdateComponent_Template_form_submit_0_listener() {\n        i0.ɵɵrestoreView(_r14);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\");\n      i0.ɵɵtext(5, \"Personal information\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"label\", 4);\n      i0.ɵɵtext(7, \"First Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5, 6);\n      i0.ɵɵelementStart(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Last Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 8, 9);\n      i0.ɵɵelementStart(14, \"label\", 10);\n      i0.ɵɵtext(15, \"Date of birth: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 11, 12);\n      i0.ɵɵelementStart(18, \"label\", 13);\n      i0.ɵɵtext(19, \"Gender: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 14, 15);\n      i0.ɵɵelementStart(22, \"label\", 16);\n      i0.ɵɵtext(23, \"Phone number: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 17, 18);\n      i0.ɵɵelementStart(26, \"label\", 19);\n      i0.ɵɵtext(27, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 20, 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 3)(31, \"h2\");\n      i0.ɵɵtext(32, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"label\", 22);\n      i0.ɵɵtext(34, \"Street: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"input\", 23, 24);\n      i0.ɵɵelementStart(37, \"label\", 25);\n      i0.ɵɵtext(38, \"City: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 26, 27);\n      i0.ɵɵelementStart(41, \"label\", 28);\n      i0.ɵɵtext(42, \"Country: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(43, \"input\", 29, 30);\n      i0.ɵɵelementStart(45, \"label\", 31);\n      i0.ɵɵtext(46, \"Zip Code: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(47, \"input\", 32, 33);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"div\", 3)(50, \"h2\");\n      i0.ɵɵtext(51, \"Emergency contact\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"label\", 34);\n      i0.ɵɵtext(53, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(54, \"input\", 35, 36);\n      i0.ɵɵelementStart(56, \"label\", 37);\n      i0.ɵɵtext(57, \"Relationship: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(58, \"input\", 38, 39);\n      i0.ɵɵelementStart(60, \"label\", 40);\n      i0.ɵɵtext(61, \"Phone:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(62, \"input\", 41, 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(64, \"button\", 42);\n      i0.ɵɵtext(65, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(66, \"br\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.person == null ? null : ctx.person.firstName);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAiBA,OAAM,MAAOA,sBAAsB;EAWjCC,YACUC,KAAqB,EACrBC,cAAkC;IADlC,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAXxB,aAAQ,GAAW,EAAE;IAIrB,iBAAY,GAAkB,EAAE;IAChC,kBAAa,GAAmB,EAAE;IAClC,cAAS,GAAc,EAAE;IACzB,wBAAmB,GAAyB,EAAE;EAK3C;EAEHC,QAAQ;IACN,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CAAED,MAAM,IAAI;MACrC,IAAI,CAACE,QAAQ,GAAGF,MAAM,CAAC,IAAI,CAAC;MAC5B,IAAI,CAACG,QAAQ,EAAE;IACjB,CAAC,CAAC;EACJ;EAEAA,QAAQ;IACJ,IAAI,CAACL,cAAc,CAACM,cAAc,CAAC,IAAI,CAACF,QAAQ,CAAC,CAACD,SAAS,CAAEI,IAAI,IAAI;MACrE,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACC,MAAM;MACzB,IAAI,CAACC,OAAO,GAAGF,IAAI,CAACE,OAAO;MAC3B,IAAI,CAACC,gBAAgB,GAAGH,IAAI,CAACG,gBAAgB;MAC7C,IAAI,CAACC,YAAY,GAAGJ,IAAI,CAACI,YAAY;MACrC,IAAI,CAACC,aAAa,GAAGL,IAAI,CAACK,aAAa;MACvC,IAAI,CAACC,SAAS,GAAGN,IAAI,CAACM,SAAS;MAC/B,IAAI,CAACC,mBAAmB,GAAGP,IAAI,CAACO,mBAAmB;IACtD,CAAC,CAAC;EACH;EAEAC,QAAQ,CAACC,YAAoB,GAE7B;;AArCWnB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCjBnCC,kCAA+D;MAAlCA;QAAAA;QAAA;QAAA,OAAUA,gCAAsB;MAAA,EAAC;MAC5DA,8BAAiB;MAETA,oCAAoB;MAAAA,iBAAK;MAC7BA,gCAAwB;MAAAA,4BAAY;MAAAA,iBAAQ;MAC5CA,8BACyC;MAEzCA,iCAAuB;MAAAA,4BAAW;MAAAA,iBAAQ;MAC1CA,+BAC+B;MAE/BA,kCAA2B;MAAAA,gCAAe;MAAAA,iBAAQ;MAClDA,iCACkC;MAElCA,kCAAoB;MAAAA,yBAAQ;MAAAA,iBAAQ;MACpCA,iCACoB;MAEpBA,kCAA0B;MAAAA,+BAAc;MAAAA,iBAAQ;MAChDA,iCACkC;MAElCA,kCAAmB;MAAAA,wBAAO;MAAAA,iBAAQ;MAClCA,iCAC4B;MAC9BA,iBAAM;MAENA,+BAAsB;MACdA,wBAAO;MAAAA,iBAAK;MAEhBA,kCAAoB;MAAAA,yBAAQ;MAAAA,iBAAQ;MACpCA,iCAC+B;MAE/BA,kCAAkB;MAAAA,uBAAM;MAAAA,iBAAQ;MAChCA,iCAC4B;MAE5BA,kCAAqB;MAAAA,0BAAS;MAAAA,iBAAQ;MACtCA,iCAC+B;MAE/BA,kCAAsB;MAAAA,2BAAU;MAAAA,iBAAQ;MACxCA,iCAC+B;MACnCA,iBAAM;MAENA,+BAAsB;MAChBA,kCAAiB;MAAAA,iBAAK;MAE1BA,kCAAkB;MAAAA,sBAAK;MAAAA,iBAAQ;MAC/BA,iCACqC;MAErCA,kCAA0B;MAAAA,+BAAc;MAAAA,iBAAQ;MAChDA,iCAC6C;MAE7CA,kCAAyB;MAAAA,uBAAM;MAAAA,iBAAQ;MACvCA,iCAC4C;MAC9CA,iBAAM;MAGRA,mCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;MAC7DA,sBAAI;MACNA,iBAAO;;;MA9DDA,eAA+B;MAA/BA,0EAA+B","names":["PatientUpdateComponent","constructor","route","patientService","ngOnInit","params","subscribe","personId","loadData","getPatientData","data","person","address","emergencyContact","appointments","prescriptions","allergies","healthcareProviders","onSubmit","personalInfo","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Kateryna_Yavna\\source\\repos\\HealthHubPro\\HealthHubPro\\HealthHub2\\HealthHubPro\\ClientApp\\src\\app\\patient-update\\patient-update.component.ts","C:\\Users\\Kateryna_Yavna\\source\\repos\\HealthHubPro\\HealthHubPro\\HealthHub2\\HealthHubPro\\ClientApp\\src\\app\\patient-update\\patient-update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Allergy } from '../models/Allergy.model';\nimport { HealthcareProvider } from '../models/HealthcareProvider.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { Person } from '../models/Person.model';\nimport { Address } from '../models/Address.model';\nimport { EmergencyContact } from '../models/EmergencyContact.model';\nimport { Appointment } from '../models/Appointment.model';\nimport { Prescription } from '../models/Prescription.model';\nimport { ProfileFormService } from '../services/profile-form.service';\n\n@Component({\n  selector: 'app-patient-update',\n  templateUrl: './patient-update.component.html',\n  styleUrls: ['./patient-update.component.css']\n})\nexport class PatientUpdateComponent implements OnInit {\n\n  personId: string = \"\";\n  person?: Person;\n  address?: Address;\n  emergencyContact?: EmergencyContact;\n  appointments: Appointment[] = [];\n  prescriptions: Prescription[] = [];\n  allergies: Allergy[] = [];\n  healthcareProviders: HealthcareProvider[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private patientService: ProfileFormService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.personId = params['id'];\n      this.loadData();\n    });\n  }\n\n  loadData() {\n      this.patientService.getPatientData(this.personId).subscribe((data) => {\n      this.person = data.person;\n      this.address = data.address;\n      this.emergencyContact = data.emergencyContact;\n      this.appointments = data.appointments;\n      this.prescriptions = data.prescriptions;\n      this.allergies = data.allergies;\n      this.healthcareProviders = data.healthcareProviders;\n   });\n  }\n\n  onSubmit(personalInfo: NgForm) {\n    \n  }\n}\n","<form #personalInfo = ngForm (submit)=\"onSubmit(personalInfo)\">\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <h2>Personal information</h2>\n      <label for=\"first-name\">First Name: </label>\n      <input id=\"first-name\" #firstName = \"ngModel\" type=\"text\" name=\"firstName\" \n      [ngModel] = \"person?.firstName\" required>\n\n      <label for=\"last-name\">Last Name: </label>\n      <input id=\"last-name\" #lastName = \"ngModel\" type=\"text\" name=\"lastName\" \n       = \"person?.lastName\" required>\n\n      <label for=\"date-of-birth\">Date of birth: </label>\n      <input id=\"date-of-birth\" #dateOfBirth = \"ngModel\" type=\"datetime\" name=\"dateOfBirth\" \n       = \"person?.dateOfBirth\" required>\n\n      <label for=\"gender\">Gender: </label>\n      <input id=\"gender\" #gender = \"ngModel\" type=\"text\" name=\"gender\"\n       = \"person?.gender\">\n\n      <label for=\"phone-number\">Phone number: </label>\n      <input id=\"phone-number\" #phoneNumber = \"ngModel\" type=\"text\" name=\"phoneNumber\"\n       = \"person?.phoneNumber\" required>\n\n      <label for=\"email\">Email: </label>\n      <input id=\"email\" #email = \"ngModel\" type=\"email\" name=\"email\" \n       = \"person?.email\" required>\n    </div>\n\n    <div class=\"col-md-4\">\n        <h2>Address</h2>\n\n        <label for=\"street\">Street: </label>\n        <input id=\"street\" #street = \"ngModel\" type=\"text\" name=\"street\" \n         = \"addressr?.street\" required>\n\n        <label for=\"city\">City: </label>\n        <input id=\"city\" #city = \"ngModel\" type=\"text\" name=\"city\" \n         = \"address?.city\" required>\n\n        <label for=\"country\">Country: </label>\n        <input id=\"country\" #country = \"ngModel\" type=\"text\" name=\"country\"\n         = \"address?.country\" required>\n\n        <label for=\"zip-code\">Zip Code: </label>\n        <input id=\"zip-code\" #zipCode = \"ngModel\" type=\"text\" name=\"zipCode\" \n         = \"address?.zipCode\" required>     \n    </div>\n\n    <div class=\"col-md-4\">\n      <h2>Emergency contact</h2>\n\n      <label for=\"name\">Name:</label>\n      <input id=\"name\" #name = \"ngModel\" type=\"text\" name=\"name\" \n       = \"emergencyContact?.name\" required>\n\n      <label for=\"relationship\">Relationship: </label>\n      <input id=\"relationship\" #relationship = \"ngModel\" type=\"text\" name=\"relationship\" \n       = \"emergencyContact?.relationship\" required>\n\n      <label for=\"phoneNumber\">Phone:</label>\n      <input id=\"phoneNumber\" #phoneNumber = \"ngModel\" type=\"text\" name=\"phoneNumber\" \n       = \"emergencyContact?.phoneNumber\" required>\n    </div>\n  </div>\n    \n  <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n  <br>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}